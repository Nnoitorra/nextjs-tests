generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model A_Stelle {
  ID                               Int                                @id(map: "PK_A_Stelle") @default(autoincrement())
  A_Stelle                         String?                            @db.VarChar(50)
  Kurz                             String?                            @db.NVarChar(100)
  Strasse                          String?                            @db.NVarChar(100)
  Ort                              String?                            @db.NVarChar(50)
  PLZ                              String?                            @db.VarChar(50)
  LKZ                              String?                            @db.NVarChar(5)
  Telefon                          String?                            @db.VarChar(50)
  Fax                              String?                            @db.VarChar(50)
  E_Mail                           String?                            @db.VarChar(50)
  Internet                         String?                            @db.VarChar(50)
  Ref_Person                       Int?
  IDNr                             String?                            @db.VarChar(50)
  EN1090                           Boolean?
  EN15085                          Boolean?
  IDEN1090                         String?                            @db.VarChar(5)
  EN1090_Bezeichnung               String?                            @db.NVarChar(100)
  NomenklaturNr                    Int?
  DIN27201                         Boolean?
  ISO3834                          Boolean?
  Latitude                         Decimal?                           @db.Decimal(14, 10)
  Longitude                        Decimal?                           @db.Decimal(14, 10)
  Kooperationspartner              Int?
  Firmenname                       String?                            @db.NVarChar(200)
  DIN6701                          Boolean?
  APIkey                           String?                            @db.NVarChar(100)
  EN15085_2020                     Boolean?                           @default(false, map: "DF_A_Stelle_EN15085_2020")
  ISO17660                         Boolean?
  Person                           Person?                            @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, map: "FK_A_Stelle_Person")
  Berichte                         Berichte[]
  Conn_AnonymRegister              Conn_AnonymRegister[]
  Conn_Anwendung_Module_Benutzer   Conn_Anwendung_Module_Benutzer[]
  Conn_Auditor_Norm_A_Stelle       Conn_Auditor_Norm_A_Stelle[]
  Conn_Auftragsart_ENW             Conn_Auftragsart_ENW[]
  Conn_Benutzer_6700               Conn_Benutzer_6700[]
  Conn_Kundennummer                Conn_Kundennummer[]
  Conn_Person_AStelle              Conn_Person_AStelle[]
  Conn_Person_Personentyp_A_Stelle Conn_Person_Personentyp_A_Stelle[]
  ECWRV_Files                      ECWRV_Files[]
  ECWRV_Recognition                ECWRV_Recognition[]
  EN1090_CERT                      EN1090_CERT[]
  ENW                              ENW[]
  Firma_Selbst                     Firma_Selbst[]
  Selbstauskunft_Antrag            Selbstauskunft_Antrag[]
}

model Access_Protokoll {
  ID          String    @id(map: "PK_Access_Protokoll") @default(dbgenerated("newid()"), map: "DF_Access_Protokoll_ID") @db.UniqueIdentifier
  Benutzer_ID Int
  Zugriff     DateTime? @default(now(), map: "DF_Access_Protokoll_Zugriff") @db.DateTime
  IP          String?   @db.VarChar(50)
  login_error Boolean?
  Benutzer    Benutzer  @relation(fields: [Benutzer_ID], references: [ID], onUpdate: NoAction, map: "FK_Access_Protokoll_Benutzer")
}

model Activity {
  ID                Int                 @id(map: "PK_Activity") @default(autoincrement())
  kurz              String?             @db.NVarChar(50)
  activity_de       String?             @db.NVarChar(50)
  activity_en       String?             @db.NVarChar(50)
  activity_it       String?             @db.NVarChar(50)
  activity_fr       String?             @db.NVarChar(50)
  activity_pl       String?             @db.NVarChar(50)
  activity_es       String?             @db.NVarChar(50)
  activity_HU       String?             @db.NVarChar(100)
  Conn_ENW_Activity Conn_ENW_Activity[]
}

model Adresse_Benutzer_6700_Paypal {
  FID                                        Int                                          @id(map: "PK__Adresse___C1BEA5A23B2333AA") @default(autoincrement())
  Firmenname                                 String?                                      @db.VarChar(200)
  Land                                       String?                                      @db.VarChar(200)
  Bundesland                                 String?                                      @db.VarChar(200)
  Stadt                                      String?                                      @db.VarChar(200)
  Strasse                                    String?                                      @db.VarChar(200)
  Hausnummer                                 String?                                      @db.VarChar(50)
  PLZ                                        String?                                      @db.VarChar(50)
  Tel_or_Fax_Nr                              String?                                      @db.VarChar(50)
  UST__ID_Nr                                 String?                                      @map("UST. ID Nr") @db.VarChar(100)
  Internetadresse                            String?                                      @db.VarChar(200)
  Conn_Adresse_Benutzer_6700_Paypal_Benutzer Conn_Adresse_Benutzer_6700_Paypal_Benutzer[]
}

model Anrede_Adresse {
  ID                          Int                           @id(map: "PK_Anrede") @default(autoincrement())
  Anrede_Adresse              String?                       @db.VarChar(50)
  Anrede_Brief                String?                       @db.VarChar(50)
  Anrede_Adresse_DE           String?                       @db.NVarChar(50)
  Anrede_Adresse_EN           String?                       @db.NVarChar(50)
  Anrede_Adresse_FR           String?                       @db.NVarChar(50)
  Anrede_Adresse_IT           String?                       @db.NVarChar(50)
  Anrede_Adresse_PL           String?                       @db.NVarChar(50)
  Anrede_Adresse_ES           String?                       @db.NVarChar(50)
  Anrede_Brief_DE             String?                       @db.NVarChar(50)
  Anrede_Brief_EN             String?                       @db.NVarChar(50)
  Anrede_Brief_FR             String?                       @db.NVarChar(50)
  Anrede_Brief_IT             String?                       @db.NVarChar(50)
  Anrede_Brief_PL             String?                       @db.NVarChar(50)
  Anrede_Brief_ES             String?                       @db.NVarChar(50)
  Anrede_Adresse_HU           String?                       @db.NVarChar(100)
  Anrede_Brief_HU             String?                       @db.NVarChar(100)
  Conn_Sprache_Anrede_Adresse Conn_Sprache_Anrede_Adresse[]
  Firma_Selbst                Firma_Selbst[]
  Person                      Person[]
}

model Anwendung {
  ID                             Int                              @id(map: "PK_Anwendung") @default(autoincrement())
  Anwendung                      String?                          @db.VarChar(50)
  Conn_Anwendung_Module          Conn_Anwendung_Module[]
  Conn_Anwendung_Module_Benutzer Conn_Anwendung_Module_Benutzer[]
}

model Anwendungsgebiet {
  ID                  Int            @id(map: "PK_Anwendungsgebiet") @default(autoincrement())
  Anwendungsgebiet    String?
  Ref_Bauteilklasse   Int?
  Anwendungsgebiet_de String?
  Anwendungsgebiet_en String?
  Anwendungsgebiet_fr String?
  Anwendungsgebiet_it String?
  Anwendungsgebiet_pl String?
  Anwendungsgebiet_es String?
  Anwendungsgebiet_HU String?        @db.NVarChar(2000)
  Bauteilklasse       Bauteilklasse? @relation(fields: [Ref_Bauteilklasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Anwendungsgebiet_Bauteilklasse")
  Conn_AG_ENW         Conn_AG_ENW[]
}

model Audit {
  ID                                              Int           @id(map: "PK_Audit") @default(autoincrement())
  Ref_Personen                                    Int?
  Auditdaten                                      String?       @db.VarChar(50)
  Audit_Datum                                     DateTime?     @db.DateTime
  Audit_next                                      DateTime?     @db.DateTime
  Ref_Personentyp                                 Int?
  Ref_CoAuditor                                   Int?
  Ref_TypCoAuditor                                Int?
  Ref_Mutter                                      Int?
  Personentyp_Audit_Ref_PersonentypToPersonentyp  Personentyp?  @relation("Audit_Ref_PersonentypToPersonentyp", fields: [Ref_Personentyp], references: [ID], onDelete: NoAction, map: "FK_Audit_Personentyp")
  Personentyp_Audit_Ref_TypCoAuditorToPersonentyp Personentyp?  @relation("Audit_Ref_TypCoAuditorToPersonentyp", fields: [Ref_TypCoAuditor], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Audit_Personentyp_CoAuditor")
  EN1090_CERT                                     EN1090_CERT[]
  ENW                                             ENW[]
}

model Auditor {
  ID                               Int                                @id(map: "PK_Auditor") @default(autoincrement())
  Nachname                         String?                            @db.NVarChar(100)
  Vorname                          String?                            @db.NVarChar(100)
  Inst                             Boolean?
  Nachname_normal                  String?                            @db.NVarChar(100)
  Ref_Titel                        Int?
  Geb_Datum                        DateTime?                          @db.Date
  aktiv                            Boolean?
  Geb_Ort                          String?                            @db.NVarChar(150)
  Geb_Land_LKZ                     String?                            @db.VarChar(5)
  thermalSpraying                  Boolean?
  Titel                            Titel?                             @relation(fields: [Ref_Titel], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Auditor_Titel")
  Conn_Auditor_Norm_A_Stelle       Conn_Auditor_Norm_A_Stelle[]
  Conn_Auditor_Personentyp         Conn_Auditor_Personentyp[]
  Conn_Auditor_Qualifikation       Conn_Auditor_Qualifikation[]
  Conn_Person_Personentyp_A_Stelle Conn_Person_Personentyp_A_Stelle[]
}

model Aufgabe_Person {
  ID                 Int                  @id(map: "PK_Aufgabe_Person") @default(autoincrement())
  Aufgabe            String?              @db.NVarChar(200)
  Aufgabe_DE         String?              @db.NVarChar(200)
  Aufgabe_EN         String?              @db.NVarChar(200)
  Aufgabe_FR         String?              @db.NVarChar(200)
  Aufgabe_IT         String?              @db.NVarChar(200)
  Aufgabe_PL         String?              @db.NVarChar(200)
  Aufgabe_ES         String?              @db.NVarChar(200)
  Aufgabe_HU         String?              @db.NVarChar(400)
  Conn_EN1090_Person Conn_EN1090_Person[]
  Conn_ENW_Person    Conn_ENW_Person[]
}

model Bausteintyp {
  ID           Int            @id(map: "PK_Bausteintyp") @default(autoincrement())
  Bausteintyp  String?        @db.VarChar(50)
  Textbaustein Textbaustein[]
}

model Bauteilklasse {
  ID                                     Int                                      @id(map: "PK_Bauteilklasse") @default(autoincrement())
  Ref_Klasse                             Int
  Bauteilklasse                          String?                                  @db.VarChar(255)
  DIN27201                               Boolean?
  aktiv                                  Boolean?                                 @default(true, map: "DF_Bauteilklasse_aktiv")
  Bauteilklasse_DE                       String?                                  @db.NVarChar(255)
  Bauteilklasse_EN                       String?                                  @db.NVarChar(255)
  Bauteilklasse_FR                       String?                                  @db.NVarChar(255)
  Bauteilklasse_IT                       String?                                  @db.NVarChar(255)
  Bauteilklasse_PL                       String?                                  @db.NVarChar(255)
  Bauteilklasse_ES                       String?                                  @db.NVarChar(255)
  kurz_DE                                String?                                  @db.VarChar(50)
  kurz_EN                                String?                                  @db.NVarChar(50)
  kurz_FR                                String?                                  @db.NVarChar(50)
  kurz_IT                                String?                                  @db.NVarChar(50)
  kurz_PL                                String?                                  @db.NVarChar(50)
  kurz_ES                                String?                                  @db.NVarChar(50)
  Bauteilklasse_HU                       String?                                  @db.NVarChar(510)
  kurz_HU                                String?                                  @db.NVarChar(50)
  Anwendungsgebiet                       Anwendungsgebiet[]
  Klasse                                 Klasse                                   @relation(fields: [Ref_Klasse], references: [ID], map: "FK_Bauteilklasse_Klasse")
  Conn_Sprache_Bauteilklasse             Conn_Sprache_Bauteilklasse[]
  Conn_Taetigkeitsbereiche_Bauteilklasse Conn_Taetigkeitsbereiche_Bauteilklasse[]
}

model Benutzer {
  ID                                                                      Int                                          @id(map: "PK_Benutzer") @default(autoincrement())
  Benutzer                                                                String                                       @db.VarChar(50)
  Passwort                                                                String?                                      @default("", map: "DF_Benutzer_Passwort") @db.VarChar(50)
  Name                                                                    String?                                      @default("", map: "DF_Benutzer_Name") @db.VarChar(50)
  Vorname                                                                 String?                                      @default("", map: "DF_Benutzer_Vorname") @db.VarChar(50)
  EMail                                                                   String?                                      @default("", map: "DF_Benutzer_EMail") @db.VarChar(50)
  Gueltigkeit                                                             DateTime?                                    @default(dbgenerated("convert(smalldatetime,(getdate() + 365))"), map: "DF_Benutzer_Gueltigkeit") @db.SmallDateTime
  Suche                                                                   Boolean?                                     @default(false, map: "DF_Benutzer_Suche")
  Nachweissuche                                                           Boolean?                                     @default(false, map: "DF_Benutzer_Nachweissuche")
  Ausgabe                                                                 Boolean?                                     @default(false, map: "DF_Benutzer_Ausgabe")
  Druck                                                                   Boolean?                                     @default(false, map: "DF_Benutzer_Druck")
  Eingabe                                                                 Boolean?                                     @default(false, map: "DF_Benutzer_Eingabe")
  Anmeldung                                                               Boolean?                                     @default(false, map: "DF_Benutzer_Anmeldung")
  Datenbasis                                                              Boolean?                                     @default(false, map: "DF_Benutzer_Datenbasis")
  Nutzer                                                                  Boolean?                                     @default(false, map: "DF_Benutzer_Nutzer")
  Statistik                                                               Boolean?                                     @default(true, map: "DF_Benutzer_Statistik")
  Ref_Sprache                                                             Int?                                         @default(0, map: "DF_Benutzer_Ref_Sprache")
  pwd_key                                                                 Int?                                         @unique(map: "IX_Benutzer")
  din18800                                                                Boolean?
  Kurzzeichen                                                             String?                                      @db.VarChar(5)
  Management                                                              Boolean?                                     @default(false, map: "DF__Benutzer__Manage__23B5BE6D")
  ECWRV                                                                   Boolean?
  Ref_Firma                                                               Int?
  Ref_A_Stelle                                                            Int?
  PWJoinCert                                                              String?                                      @db.NVarChar(255)
  Access_Protokoll                                                        Access_Protokoll[]
  Sprache                                                                 Sprache?                                     @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Benutzer_Sprache")
  Conn_Adresse_Benutzer_6700_Paypal_Benutzer                              Conn_Adresse_Benutzer_6700_Paypal_Benutzer[]
  Conn_Anwendung_Module_Benutzer                                          Conn_Anwendung_Module_Benutzer[]
  Conn_Benutzer_6700                                                      Conn_Benutzer_6700[]
  Conn_BMM                                                                Conn_BMM[]
  Selbstauskunft_Antrag_Selbstauskunft_Antrag_Ref_BeantragenderToBenutzer Selbstauskunft_Antrag[]                      @relation("Selbstauskunft_Antrag_Ref_BeantragenderToBenutzer")
  Selbstauskunft_Antrag_Selbstauskunft_Antrag_bearbeiter_vonToBenutzer    Selbstauskunft_Antrag[]                      @relation("Selbstauskunft_Antrag_bearbeiter_vonToBenutzer")
}

model Berichte {
  ID               Int           @id(map: "PK_Berichte") @default(autoincrement())
  Ref_A_Stelle     Int
  Nummer           String        @default("0", map: "DF_Berichte_Nummer") @db.NVarChar(10)
  Datum            DateTime      @db.Date
  Dateiname        String        @db.VarChar(50)
  aktiv            Boolean?
  Ref_Nachweis_Art Int?
  INSERT_DATUM     DateTime?     @db.DateTime
  A_Stelle         A_Stelle      @relation(fields: [Ref_A_Stelle], references: [ID], onUpdate: NoAction, map: "FK_Berichte_A_Stelle")
  Nachweis_Art     Nachweis_Art? @relation(fields: [Ref_Nachweis_Art], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Berichte_Nachweis_Art")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bescheinigungen_aktuell {
  id                                 Int
  Firma                              String?   @db.NVarChar(250)
  Stra_e                             String?   @map("Straße") @db.NVarChar(150)
  Postleitzahl                       String?   @db.NVarChar(50)
  Ort                                String?   @db.NVarChar(100)
  Land                               String?   @db.NVarChar(50)
  Laufende_Zertifizierung            Int?      @map("Laufende Zertifizierung") @db.SmallInt
  Ruhend                             Int?      @db.SmallInt
  A1                                 String?   @db.NVarChar(12)
  A2                                 String?   @db.NVarChar(12)
  A3                                 String?   @db.NVarChar(12)
  Hauptfunktion                      String?   @db.NVarChar(110)
  Vorbehandlungsverfahren            String?   @db.NVarChar(110)
  Fertigungsverfahren                String?   @db.NVarChar(110)
  Pr_fverfahren                      String?   @map("Prüfverfahren") @db.NVarChar(110)
  Mechanisierungsgrad                String?   @db.NVarChar(110)
  Deutsche_Bemerkungen               String?   @map("Deutsche Bemerkungen") @db.Text
  Englische_Bemerkungen              String?   @map("Englische Bemerkungen") @db.Text
  Bescheinigungnummer                String?   @db.NVarChar(30)
  G_ltig_ab                          DateTime? @map("Gültig ab") @db.Date
  G_ltig_bis                         DateTime? @map("Gültig bis") @db.Date
  Auditor                            String?   @map("1. Auditor") @db.NVarChar(100)
  Auditor2                            String?   @map("2. Auditor") @db.NVarChar(100)
  Zertifiziert_durch                 String?   @map("Zertifiziert durch") @db.NVarChar(100)
  Ausgestellt_durch                  String?   @map("Ausgestellt durch") @db.NVarChar(100)
  Ausstellungsdatum                  DateTime? @db.Date
  nderungsdatum                      DateTime? @map("Änderungsdatum") @db.Date
  Reaudit                            DateTime? @db.Date
  KAP_1_1_Anrede                     String?   @db.NVarChar(20)
  KAP_1_1_Titel                      String?   @db.NVarChar(50)
  KAP_1_1_Nachname                   String?   @db.NVarChar(100)
  KAP_1_1_Vorname                    String?   @db.NVarChar(100)
  KAP_1_1_Geburtsdatum               DateTime? @db.Date
  KAP_1_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_1_Extern                     Int?      @db.SmallInt
  KAP_1_2_Anrede                     String?   @db.NVarChar(20)
  KAP_1_2_Titel                      String?   @db.NVarChar(50)
  KAP_1_2_Nachname                   String?   @db.NVarChar(100)
  KAP_1_2_Vorname                    String?   @db.NVarChar(100)
  KAP_1_2_Geburtsdatum               DateTime? @db.Date
  KAP_1_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_2_Extern                     Int?      @db.SmallInt
  KAP_1_3_Anrede                     String?   @db.NVarChar(20)
  KAP_1_3_Titel                      String?   @db.NVarChar(50)
  KAP_1_3_Nachname                   String?   @db.NVarChar(100)
  KAP_1_3_Vorname                    String?   @db.NVarChar(100)
  KAP_1_3_Geburtsdatum               DateTime? @db.Date
  KAP_1_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_3_Extern                     Int?      @db.SmallInt
  KAP_1_4_Anrede                     String?   @db.NVarChar(20)
  KAP_1_4_Titel                      String?   @db.NVarChar(50)
  KAP_1_4_Nachname                   String?   @db.NVarChar(100)
  KAP_1_4_Vorname                    String?   @db.NVarChar(100)
  KAP_1_4_Geburtsdatum               DateTime? @db.Date
  KAP_1_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_4_Extern                     Int?      @db.SmallInt
  KAP_2_1_Anrede                     String?   @db.NVarChar(20)
  KAP_2_1_Titel                      String?   @db.NVarChar(50)
  KAP_2_1_Nachname                   String?   @db.NVarChar(100)
  KAP_2_1_Vorname                    String?   @db.NVarChar(100)
  KAP_2_1_Geburtsdatum               DateTime? @db.Date
  KAP_2_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_1_Extern                     Int?      @db.SmallInt
  KAP_2_2_Anrede                     String?   @db.NVarChar(20)
  KAP_2_2_Titel                      String?   @db.NVarChar(50)
  KAP_2_2_Nachname                   String?   @db.NVarChar(100)
  KAP_2_2_Vorname                    String?   @db.NVarChar(100)
  KAP_2_2_Geburtsdatum               DateTime? @db.Date
  KAP_2_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_2_Extern                     Int?      @db.SmallInt
  KAP_2_3_Anrede                     String?   @db.NVarChar(20)
  KAP_2_3_Titel                      String?   @db.NVarChar(50)
  KAP_2_3_Nachname                   String?   @db.NVarChar(100)
  KAP_2_3_Vorname                    String?   @db.NVarChar(100)
  KAP_2_3_Geburtsdatum               DateTime? @db.Date
  KAP_2_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_3_Extern                     Int?      @db.SmallInt
  KAP_2_4_Anrede                     String?   @db.NVarChar(20)
  KAP_2_4_Titel                      String?   @db.NVarChar(50)
  KAP_2_4_Nachname                   String?   @db.NVarChar(100)
  KAP_2_4_Vorname                    String?   @db.NVarChar(100)
  KAP_2_4_Geburtsdatum               DateTime? @db.Date
  KAP_2_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_4_Extern                     Int?      @db.SmallInt
  KAP_2_5_Anrede                     String?   @db.NVarChar(20)
  KAP_2_5_Titel                      String?   @db.NVarChar(50)
  KAP_2_5_Nachname                   String?   @db.NVarChar(100)
  KAP_2_5_Vorname                    String?   @db.NVarChar(100)
  KAP_2_5_Geburtsdatum               DateTime? @db.Date
  KAP_2_5_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_5_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_5_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_5_Extern                     Int?      @db.SmallInt
  KAP_2_6_Anrede                     String?   @db.NVarChar(20)
  KAP_2_6_Titel                      String?   @db.NVarChar(50)
  KAP_2_6_Nachname                   String?   @db.NVarChar(100)
  KAP_2_6_Vorname                    String?   @db.NVarChar(100)
  KAP_2_6_Geburtsdatum               DateTime? @db.Date
  KAP_2_6_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_6_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_6_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_6_Extern                     Int?      @db.SmallInt
  KAP_2_7_Anrede                     String?   @db.NVarChar(20)
  KAP_2_7_Titel                      String?   @db.NVarChar(50)
  KAP_2_7_Nachname                   String?   @db.NVarChar(100)
  KAP_2_7_Vorname                    String?   @db.NVarChar(100)
  KAP_2_7_Geburtsdatum               DateTime? @db.Date
  KAP_2_7_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_7_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_7_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_7_Extern                     Int?      @db.SmallInt
  KAP_2_8_Anrede                     String?   @db.NVarChar(20)
  KAP_2_8_Titel                      String?   @db.NVarChar(50)
  KAP_2_8_Nachname                   String?   @db.NVarChar(100)
  KAP_2_8_Vorname                    String?   @db.NVarChar(100)
  KAP_2_8_Geburtsdatum               DateTime? @db.Date
  KAP_2_8_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_8_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_8_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_8_Extern                     Int?      @db.SmallInt
  KAP_3_1_Anrede                     String?   @db.NVarChar(20)
  KAP_3_1_Titel                      String?   @db.NVarChar(50)
  KAP_3_1_Nachname                   String?   @db.NVarChar(100)
  KAP_3_1_Vorname                    String?   @db.NVarChar(100)
  KAP_3_1_Geburtsdatum               DateTime? @db.Date
  KAP_3_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_1_Extern                     Int?      @db.SmallInt
  KAP_3_2_Anrede                     String?   @db.NVarChar(20)
  KAP_3_2_Titel                      String?   @db.NVarChar(50)
  KAP_3_2_Nachname                   String?   @db.NVarChar(100)
  KAP_3_2_Vorname                    String?   @db.NVarChar(100)
  KAP_3_2_Geburtsdatum               DateTime? @db.Date
  KAP_3_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_2_Extern                     Int?      @db.SmallInt
  KAP_3_3_Anrede                     String?   @db.NVarChar(20)
  KAP_3_3_Titel                      String?   @db.NVarChar(50)
  KAP_3_3_Nachname                   String?   @db.NVarChar(100)
  KAP_3_3_Vorname                    String?   @db.NVarChar(100)
  KAP_3_3_Geburtsdatum               DateTime? @db.Date
  KAP_3_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_3_Extern                     Int?      @db.SmallInt
  KAP_3_4_Anrede                     String?   @db.NVarChar(20)
  KAP_3_4_Titel                      String?   @db.NVarChar(50)
  KAP_3_4_Nachname                   String?   @db.NVarChar(100)
  KAP_3_4_Vorname                    String?   @db.NVarChar(100)
  KAP_3_4_Geburtsdatum               DateTime? @db.Date
  KAP_3_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_4_Extern                     Int?      @db.SmallInt
  KAP_3_5_Anrede                     String?   @db.NVarChar(20)
  KAP_3_5_Titel                      String?   @db.NVarChar(50)
  KAP_3_5_Nachname                   String?   @db.NVarChar(100)
  KAP_3_5_Vorname                    String?   @db.NVarChar(100)
  KAP_3_5_Geburtsdatum               DateTime? @db.Date
  KAP_3_5_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_5_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_5_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_5_Extern                     Int?      @db.SmallInt
  KAP_3_6_Anrede                     String?   @db.NVarChar(20)
  KAP_3_6_Titel                      String?   @db.NVarChar(50)
  KAP_3_6_Nachname                   String?   @db.NVarChar(100)
  KAP_3_6_Vorname                    String?   @db.NVarChar(100)
  KAP_3_6_Geburtsdatum               DateTime? @db.Date
  KAP_3_6_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_6_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_6_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_6_Extern                     Int?      @db.SmallInt
  KAP_3_7_Anrede                     String?   @db.NVarChar(20)
  KAP_3_7_Titel                      String?   @db.NVarChar(50)
  KAP_3_7_Nachname                   String?   @db.NVarChar(100)
  KAP_3_7_Vorname                    String?   @db.NVarChar(100)
  KAP_3_7_Geburtsdatum               DateTime? @db.Date
  KAP_3_7_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_7_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_7_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_7_Extern                     Int?      @db.SmallInt
  KAP_3_8_Anrede                     String?   @db.NVarChar(20)
  KAP_3_8_Titel                      String?   @db.NVarChar(50)
  KAP_3_8_Nachname                   String?   @db.NVarChar(100)
  KAP_3_8_Vorname                    String?   @db.NVarChar(100)
  KAP_3_8_Geburtsdatum               DateTime? @db.Date
  KAP_3_8_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_8_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_8_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_8_Extern                     Int?      @db.SmallInt
  KAP_3_9_Anrede                     String?   @db.NVarChar(20)
  KAP_3_9_Titel                      String?   @db.NVarChar(50)
  KAP_3_9_Nachname                   String?   @db.NVarChar(100)
  KAP_3_9_Vorname                    String?   @db.NVarChar(100)
  KAP_3_9_Geburtsdatum               DateTime? @db.Date
  KAP_3_9_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_9_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_9_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_9_Extern                     Int?      @db.SmallInt
  KAP_3_10_Anrede                    String?   @db.NVarChar(20)
  KAP_3_10_Titel                     String?   @db.NVarChar(50)
  KAP_3_10_Nachname                  String?   @db.NVarChar(100)
  KAP_3_10_Vorname                   String?   @db.NVarChar(100)
  KAP_3_10_Geburtsdatum              DateTime? @db.Date
  KAP_3_10_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_10_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_10_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_10_Extern                    Int?      @db.SmallInt
  KAP_3_11_Anrede                    String?   @db.NVarChar(20)
  KAP_3_11_Titel                     String?   @db.NVarChar(50)
  KAP_3_11_Nachname                  String?   @db.NVarChar(100)
  KAP_3_11_Vorname                   String?   @db.NVarChar(100)
  KAP_3_11_Geburtsdatum              DateTime? @db.Date
  KAP_3_11_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_11_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_11_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_11_Extern                    Int?      @db.SmallInt
  KAP_3_12_Anrede                    String?   @db.NVarChar(20)
  KAP_3_12_Titel                     String?   @db.NVarChar(50)
  KAP_3_12_Nachname                  String?   @db.NVarChar(100)
  KAP_3_12_Vorname                   String?   @db.NVarChar(100)
  KAP_3_12_Geburtsdatum              DateTime? @db.Date
  KAP_3_12_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_12_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_12_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_12_Extern                    Int?      @db.SmallInt
  KAP_3_13_Anrede                    String?   @db.NVarChar(20)
  KAP_3_13_Titel                     String?   @db.NVarChar(50)
  KAP_3_13_Nachname                  String?   @db.NVarChar(100)
  KAP_3_13_Vorname                   String?   @db.NVarChar(100)
  KAP_3_13_Geburtsdatum              DateTime? @db.Date
  KAP_3_13_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_13_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_13_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_13_Extern                    Int?      @db.SmallInt
  KAP_3_14_Anrede                    String?   @db.NVarChar(20)
  KAP_3_14_Titel                     String?   @db.NVarChar(50)
  KAP_3_14_Nachname                  String?   @db.NVarChar(100)
  KAP_3_14_Vorname                   String?   @db.NVarChar(100)
  KAP_3_14_Geburtsdatum              DateTime? @db.Date
  KAP_3_14_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_14_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_14_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_14_Extern                    Int?      @db.SmallInt
  KAP_3_15_Anrede                    String?   @db.NVarChar(20)
  KAP_3_15_Titel                     String?   @db.NVarChar(50)
  KAP_3_15_Nachname                  String?   @db.NVarChar(100)
  KAP_3_15_Vorname                   String?   @db.NVarChar(100)
  KAP_3_15_Geburtsdatum              DateTime? @db.Date
  KAP_3_15_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_15_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_15_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_15_Extern                    Int?      @db.SmallInt
  KAP_3_16_Anrede                    String?   @db.NVarChar(20)
  KAP_3_16_Titel                     String?   @db.NVarChar(50)
  KAP_3_16_Nachname                  String?   @db.NVarChar(100)
  KAP_3_16_Vorname                   String?   @db.NVarChar(100)
  KAP_3_16_Geburtsdatum              DateTime? @db.Date
  KAP_3_16_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_16_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_16_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_16_Extern                    Int?      @db.SmallInt
  KAP_3_17_Anrede                    String?   @db.NVarChar(20)
  KAP_3_17_Titel                     String?   @db.NVarChar(50)
  KAP_3_17_Nachname                  String?   @db.NVarChar(100)
  KAP_3_17_Vorname                   String?   @db.NVarChar(100)
  KAP_3_17_Geburtsdatum              DateTime? @db.Date
  KAP_3_17_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_17_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_17_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_17_Extern                    Int?      @db.SmallInt
  KAP_3_18_Anrede                    String?   @db.NVarChar(20)
  KAP_3_18_Titel                     String?   @db.NVarChar(50)
  KAP_3_18_Nachname                  String?   @db.NVarChar(100)
  KAP_3_18_Vorname                   String?   @db.NVarChar(100)
  KAP_3_18_Geburtsdatum              DateTime? @db.Date
  KAP_3_18_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_18_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_18_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_18_Extern                    Int?      @db.SmallInt
  KAP_3_19_Anrede                    String?   @db.NVarChar(20)
  KAP_3_19_Titel                     String?   @db.NVarChar(50)
  KAP_3_19_Nachname                  String?   @db.NVarChar(100)
  KAP_3_19_Vorname                   String?   @db.NVarChar(100)
  KAP_3_19_Geburtsdatum              DateTime? @db.Date
  KAP_3_19_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_19_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_19_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_19_Extern                    Int?      @db.SmallInt
  KAP_3_20_Anrede                    String?   @db.NVarChar(20)
  KAP_3_20_Titel                     String?   @db.NVarChar(50)
  KAP_3_20_Nachname                  String?   @db.NVarChar(100)
  KAP_3_20_Vorname                   String?   @db.NVarChar(100)
  KAP_3_20_Geburtsdatum              DateTime? @db.Date
  KAP_3_20_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_20_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_20_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_20_Extern                    Int?      @db.SmallInt
  KAP_3_21_Anrede                    String?   @db.NVarChar(20)
  KAP_3_21_Titel                     String?   @db.NVarChar(50)
  KAP_3_21_Nachname                  String?   @db.NVarChar(100)
  KAP_3_21_Vorname                   String?   @db.NVarChar(100)
  KAP_3_21_Geburtsdatum              DateTime? @db.Date
  KAP_3_21_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_21_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_21_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_21_Extern                    Int?      @db.SmallInt
  KAP_3_22_Anrede                    String?   @db.NVarChar(20)
  KAP_3_22_Titel                     String?   @db.NVarChar(50)
  KAP_3_22_Nachname                  String?   @db.NVarChar(100)
  KAP_3_22_Vorname                   String?   @db.NVarChar(100)
  KAP_3_22_Geburtsdatum              DateTime? @db.Date
  KAP_3_22_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_22_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_22_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_22_Extern                    Int?      @db.SmallInt
  KAP_3_23_Anrede                    String?   @db.NVarChar(20)
  KAP_3_23_Titel                     String?   @db.NVarChar(50)
  KAP_3_23_Nachname                  String?   @db.NVarChar(100)
  KAP_3_23_Vorname                   String?   @db.NVarChar(100)
  KAP_3_23_Geburtsdatum              DateTime? @db.Date
  KAP_3_23_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_23_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_23_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_23_Extern                    Int?      @db.SmallInt
  KAP_3_24_Anrede                    String?   @db.NVarChar(20)
  KAP_3_24_Titel                     String?   @db.NVarChar(50)
  KAP_3_24_Nachname                  String?   @db.NVarChar(100)
  KAP_3_24_Vorname                   String?   @db.NVarChar(100)
  KAP_3_24_Geburtsdatum              DateTime? @db.Date
  KAP_3_24_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_24_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_24_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_24_Extern                    Int?      @db.SmallInt
  KAP_3_25_Anrede                    String?   @db.NVarChar(20)
  KAP_3_25_Titel                     String?   @db.NVarChar(50)
  KAP_3_25_Nachname                  String?   @db.NVarChar(100)
  KAP_3_25_Vorname                   String?   @db.NVarChar(100)
  KAP_3_25_Geburtsdatum              DateTime? @db.Date
  KAP_3_25_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_25_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_25_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_25_Extern                    Int?      @db.SmallInt
  KAP_3_26_Anrede                    String?   @db.NVarChar(20)
  KAP_3_26_Titel                     String?   @db.NVarChar(50)
  KAP_3_26_Nachname                  String?   @db.NVarChar(100)
  KAP_3_26_Vorname                   String?   @db.NVarChar(100)
  KAP_3_26_Geburtsdatum              DateTime? @db.Date
  KAP_3_26_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_26_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_26_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_26_Extern                    Int?      @db.SmallInt
  KAP_3_27_Anrede                    String?   @db.NVarChar(20)
  KAP_3_27_Titel                     String?   @db.NVarChar(50)
  KAP_3_27_Nachname                  String?   @db.NVarChar(100)
  KAP_3_27_Vorname                   String?   @db.NVarChar(100)
  KAP_3_27_Geburtsdatum              DateTime? @db.Date
  KAP_3_27_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_27_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_27_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_27_Extern                    Int?      @db.SmallInt
  KAP_3_28_Anrede                    String?   @db.NVarChar(20)
  KAP_3_28_Titel                     String?   @db.NVarChar(50)
  KAP_3_28_Nachname                  String?   @db.NVarChar(100)
  KAP_3_28_Vorname                   String?   @db.NVarChar(100)
  KAP_3_28_Geburtsdatum              DateTime? @db.Date
  KAP_3_28_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_28_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_28_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_28_Extern                    Int?      @db.SmallInt
  KAP_3_29_Anrede                    String?   @db.NVarChar(20)
  KAP_3_29_Titel                     String?   @db.NVarChar(50)
  KAP_3_29_Nachname                  String?   @db.NVarChar(100)
  KAP_3_29_Vorname                   String?   @db.NVarChar(100)
  KAP_3_29_Geburtsdatum              DateTime? @db.Date
  KAP_3_29_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_29_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_29_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_29_Extern                    Int?      @db.SmallInt
  KAP_3_30_Anrede                    String?   @db.NVarChar(20)
  KAP_3_30_Titel                     String?   @db.NVarChar(50)
  KAP_3_30_Nachname                  String?   @db.NVarChar(100)
  KAP_3_30_Vorname                   String?   @db.NVarChar(100)
  KAP_3_30_Geburtsdatum              DateTime? @db.Date
  KAP_3_30_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_30_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_30_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_30_Extern                    Int?      @db.SmallInt
  KAP_3_31_Anrede                    String?   @db.NVarChar(20)
  KAP_3_31_Titel                     String?   @db.NVarChar(50)
  KAP_3_31_Nachname                  String?   @db.NVarChar(100)
  KAP_3_31_Vorname                   String?   @db.NVarChar(100)
  KAP_3_31_Geburtsdatum              DateTime? @db.Date
  KAP_3_31_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_31_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_31_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_31_Extern                    Int?      @db.SmallInt
  KAP_3_32_Anrede                    String?   @db.NVarChar(20)
  KAP_3_32_Titel                     String?   @db.NVarChar(50)
  KAP_3_32_Nachname                  String?   @db.NVarChar(100)
  KAP_3_32_Vorname                   String?   @db.NVarChar(100)
  KAP_3_32_Geburtsdatum              DateTime? @db.Date
  KAP_3_32_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_32_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_32_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_32_Extern                    Int?      @db.SmallInt

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bescheinigungen_alt {
  id                                 Int
  Firma                              String?   @db.NVarChar(250)
  Stra_e                             String?   @map("Straße") @db.NVarChar(150)
  Postleitzahl                       String?   @db.NVarChar(50)
  Ort                                String?   @db.NVarChar(100)
  Land                               String?   @db.NVarChar(50)
  Klasse                             String?   @db.NVarChar(25)
  Unterklasse                        String?   @db.NVarChar(25)
  A1                                 String?   @db.NVarChar(12)
  A2                                 String?   @db.NVarChar(12)
  A3                                 String?   @db.NVarChar(12)
  Hauptfunktion                      String?   @db.NVarChar(110)
  Vorbehandlungsverfahren            String?   @db.NVarChar(110)
  Fertigungsverfahren                String?   @db.NVarChar(110)
  Pr_fverfahren                      String?   @map("Prüfverfahren") @db.NVarChar(110)
  Mechanisierungsgrad                String?   @db.NVarChar(110)
  Deutsche_Bemerkungen               String?   @map("Deutsche Bemerkungen") @db.Text
  Englische_Bemerkungen              String?   @map("Englische Bemerkungen") @db.Text
  Bescheinigungnummer                String?   @db.NVarChar(30)
  G_ltig_ab                          DateTime? @map("Gültig ab") @db.Date
  G_ltig_bis                         DateTime? @map("Gültig bis") @db.Date
  Auditor                            String?   @map("1. Auditor") @db.NVarChar(100)
  Auditor2                            String?   @map("2. Auditor") @db.NVarChar(100)
  Zertifiziert_durch                 String?   @map("Zertifiziert durch") @db.NVarChar(100)
  Ausgestellt_durch                  String?   @map("Ausgestellt durch") @db.NVarChar(100)
  Ausstellungsdatum                  DateTime? @db.Date
  nderungsdatum                      DateTime? @map("Änderungsdatum") @db.Date
  Zur_ckgezogendatum                 DateTime? @map("Zurückgezogendatum") @db.Date
  KAP_1_1_Anrede                     String?   @db.NVarChar(20)
  KAP_1_1_Titel                      String?   @db.NVarChar(50)
  KAP_1_1_Nachname                   String?   @db.NVarChar(100)
  KAP_1_1_Vorname                    String?   @db.NVarChar(100)
  KAP_1_1_Geburtsdatum               DateTime? @db.Date
  KAP_1_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_1_Extern                     Int?      @db.SmallInt
  KAP_1_2_Anrede                     String?   @db.NVarChar(20)
  KAP_1_2_Titel                      String?   @db.NVarChar(50)
  KAP_1_2_Nachname                   String?   @db.NVarChar(100)
  KAP_1_2_Vorname                    String?   @db.NVarChar(100)
  KAP_1_2_Geburtsdatum               DateTime? @db.Date
  KAP_1_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_2_Extern                     Int?      @db.SmallInt
  KAP_1_3_Anrede                     String?   @db.NVarChar(20)
  KAP_1_3_Titel                      String?   @db.NVarChar(50)
  KAP_1_3_Nachname                   String?   @db.NVarChar(100)
  KAP_1_3_Vorname                    String?   @db.NVarChar(100)
  KAP_1_3_Geburtsdatum               DateTime? @db.Date
  KAP_1_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_3_Extern                     Int?      @db.SmallInt
  KAP_1_4_Anrede                     String?   @db.NVarChar(20)
  KAP_1_4_Titel                      String?   @db.NVarChar(50)
  KAP_1_4_Nachname                   String?   @db.NVarChar(100)
  KAP_1_4_Vorname                    String?   @db.NVarChar(100)
  KAP_1_4_Geburtsdatum               DateTime? @db.Date
  KAP_1_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_1_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_1_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_1_4_Extern                     Int?      @db.SmallInt
  KAP_2_1_Anrede                     String?   @db.NVarChar(20)
  KAP_2_1_Titel                      String?   @db.NVarChar(50)
  KAP_2_1_Nachname                   String?   @db.NVarChar(100)
  KAP_2_1_Vorname                    String?   @db.NVarChar(100)
  KAP_2_1_Geburtsdatum               DateTime? @db.Date
  KAP_2_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_1_Extern                     Int?      @db.SmallInt
  KAP_2_2_Anrede                     String?   @db.NVarChar(20)
  KAP_2_2_Titel                      String?   @db.NVarChar(50)
  KAP_2_2_Nachname                   String?   @db.NVarChar(100)
  KAP_2_2_Vorname                    String?   @db.NVarChar(100)
  KAP_2_2_Geburtsdatum               DateTime? @db.Date
  KAP_2_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_2_Extern                     Int?      @db.SmallInt
  KAP_2_3_Anrede                     String?   @db.NVarChar(20)
  KAP_2_3_Titel                      String?   @db.NVarChar(50)
  KAP_2_3_Nachname                   String?   @db.NVarChar(100)
  KAP_2_3_Vorname                    String?   @db.NVarChar(100)
  KAP_2_3_Geburtsdatum               DateTime? @db.Date
  KAP_2_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_3_Extern                     Int?      @db.SmallInt
  KAP_2_4_Anrede                     String?   @db.NVarChar(20)
  KAP_2_4_Titel                      String?   @db.NVarChar(50)
  KAP_2_4_Nachname                   String?   @db.NVarChar(100)
  KAP_2_4_Vorname                    String?   @db.NVarChar(100)
  KAP_2_4_Geburtsdatum               DateTime? @db.Date
  KAP_2_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_4_Extern                     Int?      @db.SmallInt
  KAP_2_5_Anrede                     String?   @db.NVarChar(20)
  KAP_2_5_Titel                      String?   @db.NVarChar(50)
  KAP_2_5_Nachname                   String?   @db.NVarChar(100)
  KAP_2_5_Vorname                    String?   @db.NVarChar(100)
  KAP_2_5_Geburtsdatum               DateTime? @db.Date
  KAP_2_5_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_5_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_5_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_5_Extern                     Int?      @db.SmallInt
  KAP_2_6_Anrede                     String?   @db.NVarChar(20)
  KAP_2_6_Titel                      String?   @db.NVarChar(50)
  KAP_2_6_Nachname                   String?   @db.NVarChar(100)
  KAP_2_6_Vorname                    String?   @db.NVarChar(100)
  KAP_2_6_Geburtsdatum               DateTime? @db.Date
  KAP_2_6_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_6_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_6_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_6_Extern                     Int?      @db.SmallInt
  KAP_2_7_Anrede                     String?   @db.NVarChar(20)
  KAP_2_7_Titel                      String?   @db.NVarChar(50)
  KAP_2_7_Nachname                   String?   @db.NVarChar(100)
  KAP_2_7_Vorname                    String?   @db.NVarChar(100)
  KAP_2_7_Geburtsdatum               DateTime? @db.Date
  KAP_2_7_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_7_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_7_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_7_Extern                     Int?      @db.SmallInt
  KAP_2_8_Anrede                     String?   @db.NVarChar(20)
  KAP_2_8_Titel                      String?   @db.NVarChar(50)
  KAP_2_8_Nachname                   String?   @db.NVarChar(100)
  KAP_2_8_Vorname                    String?   @db.NVarChar(100)
  KAP_2_8_Geburtsdatum               DateTime? @db.Date
  KAP_2_8_Qualifikation              String?   @db.NVarChar(50)
  KAP_2_8_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_2_8_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_2_8_Extern                     Int?      @db.SmallInt
  KAP_3_1_Anrede                     String?   @db.NVarChar(20)
  KAP_3_1_Titel                      String?   @db.NVarChar(50)
  KAP_3_1_Nachname                   String?   @db.NVarChar(100)
  KAP_3_1_Vorname                    String?   @db.NVarChar(100)
  KAP_3_1_Geburtsdatum               DateTime? @db.Date
  KAP_3_1_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_1_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_1_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_1_Extern                     Int?      @db.SmallInt
  KAP_3_2_Anrede                     String?   @db.NVarChar(20)
  KAP_3_2_Titel                      String?   @db.NVarChar(50)
  KAP_3_2_Nachname                   String?   @db.NVarChar(100)
  KAP_3_2_Vorname                    String?   @db.NVarChar(100)
  KAP_3_2_Geburtsdatum               DateTime? @db.Date
  KAP_3_2_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_2_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_2_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_2_Extern                     Int?      @db.SmallInt
  KAP_3_3_Anrede                     String?   @db.NVarChar(20)
  KAP_3_3_Titel                      String?   @db.NVarChar(50)
  KAP_3_3_Nachname                   String?   @db.NVarChar(100)
  KAP_3_3_Vorname                    String?   @db.NVarChar(100)
  KAP_3_3_Geburtsdatum               DateTime? @db.Date
  KAP_3_3_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_3_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_3_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_3_Extern                     Int?      @db.SmallInt
  KAP_3_4_Anrede                     String?   @db.NVarChar(20)
  KAP_3_4_Titel                      String?   @db.NVarChar(50)
  KAP_3_4_Nachname                   String?   @db.NVarChar(100)
  KAP_3_4_Vorname                    String?   @db.NVarChar(100)
  KAP_3_4_Geburtsdatum               DateTime? @db.Date
  KAP_3_4_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_4_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_4_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_4_Extern                     Int?      @db.SmallInt
  KAP_3_5_Anrede                     String?   @db.NVarChar(20)
  KAP_3_5_Titel                      String?   @db.NVarChar(50)
  KAP_3_5_Nachname                   String?   @db.NVarChar(100)
  KAP_3_5_Vorname                    String?   @db.NVarChar(100)
  KAP_3_5_Geburtsdatum               DateTime? @db.Date
  KAP_3_5_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_5_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_5_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_5_Extern                     Int?      @db.SmallInt
  KAP_3_6_Anrede                     String?   @db.NVarChar(20)
  KAP_3_6_Titel                      String?   @db.NVarChar(50)
  KAP_3_6_Nachname                   String?   @db.NVarChar(100)
  KAP_3_6_Vorname                    String?   @db.NVarChar(100)
  KAP_3_6_Geburtsdatum               DateTime? @db.Date
  KAP_3_6_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_6_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_6_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_6_Extern                     Int?      @db.SmallInt
  KAP_3_7_Anrede                     String?   @db.NVarChar(20)
  KAP_3_7_Titel                      String?   @db.NVarChar(50)
  KAP_3_7_Nachname                   String?   @db.NVarChar(100)
  KAP_3_7_Vorname                    String?   @db.NVarChar(100)
  KAP_3_7_Geburtsdatum               DateTime? @db.Date
  KAP_3_7_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_7_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_7_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_7_Extern                     Int?      @db.SmallInt
  KAP_3_8_Anrede                     String?   @db.NVarChar(20)
  KAP_3_8_Titel                      String?   @db.NVarChar(50)
  KAP_3_8_Nachname                   String?   @db.NVarChar(100)
  KAP_3_8_Vorname                    String?   @db.NVarChar(100)
  KAP_3_8_Geburtsdatum               DateTime? @db.Date
  KAP_3_8_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_8_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_8_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_8_Extern                     Int?      @db.SmallInt
  KAP_3_9_Anrede                     String?   @db.NVarChar(20)
  KAP_3_9_Titel                      String?   @db.NVarChar(50)
  KAP_3_9_Nachname                   String?   @db.NVarChar(100)
  KAP_3_9_Vorname                    String?   @db.NVarChar(100)
  KAP_3_9_Geburtsdatum               DateTime? @db.Date
  KAP_3_9_Qualifikation              String?   @db.NVarChar(50)
  KAP_3_9_DeutscherAufgabenbereich   String?   @db.NVarChar(250)
  KAP_3_9_EnglischerAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_9_Extern                     Int?      @db.SmallInt
  KAP_3_10_Anrede                    String?   @db.NVarChar(20)
  KAP_3_10_Titel                     String?   @db.NVarChar(50)
  KAP_3_10_Nachname                  String?   @db.NVarChar(100)
  KAP_3_10_Vorname                   String?   @db.NVarChar(100)
  KAP_3_10_Geburtsdatum              DateTime? @db.Date
  KAP_3_10_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_10_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_10_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_10_Extern                    Int?      @db.SmallInt
  KAP_3_11_Anrede                    String?   @db.NVarChar(20)
  KAP_3_11_Titel                     String?   @db.NVarChar(50)
  KAP_3_11_Nachname                  String?   @db.NVarChar(100)
  KAP_3_11_Vorname                   String?   @db.NVarChar(100)
  KAP_3_11_Geburtsdatum              DateTime? @db.Date
  KAP_3_11_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_11_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_11_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_11_Extern                    Int?      @db.SmallInt
  KAP_3_12_Anrede                    String?   @db.NVarChar(20)
  KAP_3_12_Titel                     String?   @db.NVarChar(50)
  KAP_3_12_Nachname                  String?   @db.NVarChar(100)
  KAP_3_12_Vorname                   String?   @db.NVarChar(100)
  KAP_3_12_Geburtsdatum              DateTime? @db.Date
  KAP_3_12_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_12_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_12_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_12_Extern                    Int?      @db.SmallInt
  KAP_3_13_Anrede                    String?   @db.NVarChar(20)
  KAP_3_13_Titel                     String?   @db.NVarChar(50)
  KAP_3_13_Nachname                  String?   @db.NVarChar(100)
  KAP_3_13_Vorname                   String?   @db.NVarChar(100)
  KAP_3_13_Geburtsdatum              DateTime? @db.Date
  KAP_3_13_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_13_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_13_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_13_Extern                    Int?      @db.SmallInt
  KAP_3_14_Anrede                    String?   @db.NVarChar(20)
  KAP_3_14_Titel                     String?   @db.NVarChar(50)
  KAP_3_14_Nachname                  String?   @db.NVarChar(100)
  KAP_3_14_Vorname                   String?   @db.NVarChar(100)
  KAP_3_14_Geburtsdatum              DateTime? @db.Date
  KAP_3_14_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_14_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_14_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_14_Extern                    Int?      @db.SmallInt
  KAP_3_15_Anrede                    String?   @db.NVarChar(20)
  KAP_3_15_Titel                     String?   @db.NVarChar(50)
  KAP_3_15_Nachname                  String?   @db.NVarChar(100)
  KAP_3_15_Vorname                   String?   @db.NVarChar(100)
  KAP_3_15_Geburtsdatum              DateTime? @db.Date
  KAP_3_15_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_15_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_15_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_15_Extern                    Int?      @db.SmallInt
  KAP_3_16_Anrede                    String?   @db.NVarChar(20)
  KAP_3_16_Titel                     String?   @db.NVarChar(50)
  KAP_3_16_Nachname                  String?   @db.NVarChar(100)
  KAP_3_16_Vorname                   String?   @db.NVarChar(100)
  KAP_3_16_Geburtsdatum              DateTime? @db.Date
  KAP_3_16_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_16_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_16_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_16_Extern                    Int?      @db.SmallInt
  KAP_3_17_Anrede                    String?   @db.NVarChar(20)
  KAP_3_17_Titel                     String?   @db.NVarChar(50)
  KAP_3_17_Nachname                  String?   @db.NVarChar(100)
  KAP_3_17_Vorname                   String?   @db.NVarChar(100)
  KAP_3_17_Geburtsdatum              DateTime? @db.Date
  KAP_3_17_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_17_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_17_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_17_Extern                    Int?      @db.SmallInt
  KAP_3_18_Anrede                    String?   @db.NVarChar(20)
  KAP_3_18_Titel                     String?   @db.NVarChar(50)
  KAP_3_18_Nachname                  String?   @db.NVarChar(100)
  KAP_3_18_Vorname                   String?   @db.NVarChar(100)
  KAP_3_18_Geburtsdatum              DateTime? @db.Date
  KAP_3_18_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_18_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_18_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_18_Extern                    Int?      @db.SmallInt
  KAP_3_19_Anrede                    String?   @db.NVarChar(20)
  KAP_3_19_Titel                     String?   @db.NVarChar(50)
  KAP_3_19_Nachname                  String?   @db.NVarChar(100)
  KAP_3_19_Vorname                   String?   @db.NVarChar(100)
  KAP_3_19_Geburtsdatum              DateTime? @db.Date
  KAP_3_19_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_19_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_19_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_19_Extern                    Int?      @db.SmallInt
  KAP_3_20_Anrede                    String?   @db.NVarChar(20)
  KAP_3_20_Titel                     String?   @db.NVarChar(50)
  KAP_3_20_Nachname                  String?   @db.NVarChar(100)
  KAP_3_20_Vorname                   String?   @db.NVarChar(100)
  KAP_3_20_Geburtsdatum              DateTime? @db.Date
  KAP_3_20_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_20_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_20_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_20_Extern                    Int?      @db.SmallInt
  KAP_3_21_Anrede                    String?   @db.NVarChar(20)
  KAP_3_21_Titel                     String?   @db.NVarChar(50)
  KAP_3_21_Nachname                  String?   @db.NVarChar(100)
  KAP_3_21_Vorname                   String?   @db.NVarChar(100)
  KAP_3_21_Geburtsdatum              DateTime? @db.Date
  KAP_3_21_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_21_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_21_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_21_Extern                    Int?      @db.SmallInt
  KAP_3_22_Anrede                    String?   @db.NVarChar(20)
  KAP_3_22_Titel                     String?   @db.NVarChar(50)
  KAP_3_22_Nachname                  String?   @db.NVarChar(100)
  KAP_3_22_Vorname                   String?   @db.NVarChar(100)
  KAP_3_22_Geburtsdatum              DateTime? @db.Date
  KAP_3_22_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_22_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_22_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_22_Extern                    Int?      @db.SmallInt
  KAP_3_23_Anrede                    String?   @db.NVarChar(20)
  KAP_3_23_Titel                     String?   @db.NVarChar(50)
  KAP_3_23_Nachname                  String?   @db.NVarChar(100)
  KAP_3_23_Vorname                   String?   @db.NVarChar(100)
  KAP_3_23_Geburtsdatum              DateTime? @db.Date
  KAP_3_23_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_23_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_23_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_23_Extern                    Int?      @db.SmallInt
  KAP_3_24_Anrede                    String?   @db.NVarChar(20)
  KAP_3_24_Titel                     String?   @db.NVarChar(50)
  KAP_3_24_Nachname                  String?   @db.NVarChar(100)
  KAP_3_24_Vorname                   String?   @db.NVarChar(100)
  KAP_3_24_Geburtsdatum              DateTime? @db.Date
  KAP_3_24_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_24_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_24_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_24_Extern                    Int?      @db.SmallInt
  KAP_3_25_Anrede                    String?   @db.NVarChar(20)
  KAP_3_25_Titel                     String?   @db.NVarChar(50)
  KAP_3_25_Nachname                  String?   @db.NVarChar(100)
  KAP_3_25_Vorname                   String?   @db.NVarChar(100)
  KAP_3_25_Geburtsdatum              DateTime? @db.Date
  KAP_3_25_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_25_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_25_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_25_Extern                    Int?      @db.SmallInt
  KAP_3_26_Anrede                    String?   @db.NVarChar(20)
  KAP_3_26_Titel                     String?   @db.NVarChar(50)
  KAP_3_26_Nachname                  String?   @db.NVarChar(100)
  KAP_3_26_Vorname                   String?   @db.NVarChar(100)
  KAP_3_26_Geburtsdatum              DateTime? @db.Date
  KAP_3_26_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_26_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_26_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_26_Extern                    Int?      @db.SmallInt
  KAP_3_27_Anrede                    String?   @db.NVarChar(20)
  KAP_3_27_Titel                     String?   @db.NVarChar(50)
  KAP_3_27_Nachname                  String?   @db.NVarChar(100)
  KAP_3_27_Vorname                   String?   @db.NVarChar(100)
  KAP_3_27_Geburtsdatum              DateTime? @db.Date
  KAP_3_27_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_27_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_27_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_27_Extern                    Int?      @db.SmallInt
  KAP_3_28_Anrede                    String?   @db.NVarChar(20)
  KAP_3_28_Titel                     String?   @db.NVarChar(50)
  KAP_3_28_Nachname                  String?   @db.NVarChar(100)
  KAP_3_28_Vorname                   String?   @db.NVarChar(100)
  KAP_3_28_Geburtsdatum              DateTime? @db.Date
  KAP_3_28_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_28_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_28_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_28_Extern                    Int?      @db.SmallInt
  KAP_3_29_Anrede                    String?   @db.NVarChar(20)
  KAP_3_29_Titel                     String?   @db.NVarChar(50)
  KAP_3_29_Nachname                  String?   @db.NVarChar(100)
  KAP_3_29_Vorname                   String?   @db.NVarChar(100)
  KAP_3_29_Geburtsdatum              DateTime? @db.Date
  KAP_3_29_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_29_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_29_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_29_Extern                    Int?      @db.SmallInt
  KAP_3_30_Anrede                    String?   @db.NVarChar(20)
  KAP_3_30_Titel                     String?   @db.NVarChar(50)
  KAP_3_30_Nachname                  String?   @db.NVarChar(100)
  KAP_3_30_Vorname                   String?   @db.NVarChar(100)
  KAP_3_30_Geburtsdatum              DateTime? @db.Date
  KAP_3_30_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_30_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_30_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_30_Extern                    Int?      @db.SmallInt
  KAP_3_31_Anrede                    String?   @db.NVarChar(20)
  KAP_3_31_Titel                     String?   @db.NVarChar(50)
  KAP_3_31_Nachname                  String?   @db.NVarChar(100)
  KAP_3_31_Vorname                   String?   @db.NVarChar(100)
  KAP_3_31_Geburtsdatum              DateTime? @db.Date
  KAP_3_31_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_31_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_31_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_31_Extern                    Int?      @db.SmallInt
  KAP_3_32_Anrede                    String?   @db.NVarChar(20)
  KAP_3_32_Titel                     String?   @db.NVarChar(50)
  KAP_3_32_Nachname                  String?   @db.NVarChar(100)
  KAP_3_32_Vorname                   String?   @db.NVarChar(100)
  KAP_3_32_Geburtsdatum              DateTime? @db.Date
  KAP_3_32_Qualifikation             String?   @db.NVarChar(50)
  KAP_3_32_DeutscherAufgabenbereich  String?   @db.NVarChar(250)
  KAP_3_32_EnglischerAufgabenbereich String?   @db.NVarChar(250)
  KAP_3_32_Extern                    Int?      @db.SmallInt

  @@ignore
}

model Bundesland {
  ID                      Int                       @id(map: "PK_Bundesland") @default(autoincrement())
  Kurz                    String?                   @db.VarChar(50)
  Bundesland              String?                   @db.VarChar(50)
  Ref_LKZ                 String?                   @db.NChar(5)
  Bundesland_DE           String?                   @db.NVarChar(100)
  Bundesland_EN           String?                   @db.NVarChar(100)
  Bundesland_FR           String?                   @db.NVarChar(100)
  Bundesland_IT           String?                   @db.NVarChar(100)
  Bundesland_PL           String?                   @db.NVarChar(100)
  Bundesland_ES           String?                   @db.NVarChar(100)
  Bundesland_HU           String?                   @db.NVarChar(200)
  Conn_Sprache_Bundesland Conn_Sprache_Bundesland[]
  Firma                   Firma[]
  Werkstatt               Werkstatt[]
}

model Conn_Adresse_Benutzer_6700_Paypal_Benutzer {
  Id                           Int                           @id(map: "PK__Conn_Adr__3214EC073EF3C48E") @default(autoincrement())
  Ref_Benutzer                 Int?
  Ref_Firma                    Int?
  Benutzer                     Benutzer?                     @relation(fields: [Ref_Benutzer], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Conn_Adre__Ref_B__41D03139")
  Adresse_Benutzer_6700_Paypal Adresse_Benutzer_6700_Paypal? @relation(fields: [Ref_Firma], references: [FID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Conn_Adre__Ref_F__40DC0D00")
}

model Conn_AG_ENW {
  ID                   Int              @id(map: "PK_Conn_AG_ENW") @default(autoincrement())
  Ref_Anwendungsgebiet Int              @default(0, map: "DF__Conn_AG_E__Ref_A__1D1DCF77")
  Ref_ENW              Int              @default(0, map: "DF__Conn_AG_E__Ref_E__1E11F3B0")
  lngRow               Int              @default(0, map: "DF__Conn_AG_E__lngRo__1F0617E9")
  Ref_Sprache          Int?
  ENW                  ENW              @relation(fields: [Ref_ENW], references: [ID], onDelete: Cascade, map: "FK_Conn_AG_ENW")
  Anwendungsgebiet     Anwendungsgebiet @relation(fields: [Ref_Anwendungsgebiet], references: [ID], onDelete: Cascade, map: "FK_Conn_AG_ENW_Anwendungsgebiet")
  Sprache              Sprache?         @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_AG_ENW_Sprache")
}

model Conn_AnonymRegister {
  ID             Int       @id(map: "PK_Conn_AnonymRegister") @default(autoincrement())
  Ref_A_Stelle   Int?
  Ref_Norm       Int?
  Ref_Person     Int?
  anonymRegister Boolean?
  A_Stelle       A_Stelle? @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_AnonymRegister_A_Stelle")
  Norm           Norm?     @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_AnonymRegister_Norm")
  Person         Person?   @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_AnonymRegister_Person")
}

model Conn_Anwendung_Module {
  ID            Int       @id(map: "PK_Conn_Anwendung_Module") @default(autoincrement())
  Ref_Anwendung Int
  Ref_Module    Int
  Anwendung     Anwendung @relation(fields: [Ref_Anwendung], references: [ID], onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Anwendung")
  Module        Module    @relation(fields: [Ref_Module], references: [ID], onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Module")
}

model Conn_Anwendung_Module_Benutzer {
  ID            Int        @id(map: "PK_Conn_Anwendung_Module_Benutzer") @default(autoincrement())
  Ref_Anwendung Int?
  Ref_Module    Int?
  Ref_Benutzer  Int?
  Ref_A_Stelle  Int?
  A_Stelle      A_Stelle?  @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Benutzer_A_Stelle")
  Anwendung     Anwendung? @relation(fields: [Ref_Anwendung], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Benutzer_Anwendung")
  Benutzer      Benutzer?  @relation(fields: [Ref_Benutzer], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Benutzer_Benutzer")
  Module        Module?    @relation(fields: [Ref_Module], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Anwendung_Module_Benutzer_Module")
}

model Conn_Anwendung_Module_Rolle {
  ID            Int  @id(map: "PK_Conn_Anwendung_Module_Rolle") @default(autoincrement())
  Ref_Anwendung Int?
  Ref_Module    Int?
  Ref_Rolle     Int?
}

model Conn_Auditor_Norm_A_Stelle {
  ID           Int       @id(map: "PK_Conn_Auditor_Norm_A_Stelle") @default(autoincrement())
  Ref_Auditor  Int?
  Ref_Norm     Int?
  Ref_A_Stelle Int?
  aktiv        Boolean?
  A_Stelle     A_Stelle? @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditor_Norm_A_Stelle_A_Stelle")
  Auditor      Auditor?  @relation(fields: [Ref_Auditor], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditor_Norm_A_Stelle_Auditor")
  Norm         Norm?     @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditor_Norm_A_Stelle_Norm")
}

model Conn_Auditor_Personentyp {
  ID              Int          @id(map: "PK_Conn_Auditor_Personentyp") @default(autoincrement())
  Ref_Person      Int?
  Ref_PersonenTyp Int?
  Auditor         Auditor?     @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditor_Personentyp_Auditor")
  Personentyp     Personentyp? @relation(fields: [Ref_PersonenTyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditor_Personentyp_Personentyp")
}

model Conn_Auditor_Qualifikation {
  ID                Int           @id(map: "PK_Conn_Auditor_Qualifikation") @default(autoincrement())
  Ref_Auditor       Int
  Ref_Qualifikation Int
  Auditor           Auditor       @relation(fields: [Ref_Auditor], references: [ID], onUpdate: NoAction, map: "FK_Conn_Auditor_Qualifikation_Auditor")
  Qualifikation     Qualifikation @relation(fields: [Ref_Qualifikation], references: [ID], onUpdate: NoAction, map: "FK_Conn_Auditor_Qualifikation_Qualifikation")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Conn_Auditziel_ENW {
  ID                    Int?
  Ref_ENW               Int?
  Ref_EN15085_Auditziel Int?
  Datum                 DateTime?          @db.Date
  EN15085_Auditziel     EN15085_Auditziel? @relation(fields: [Ref_EN15085_Auditziel], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditziel_ENW_EN15085_Auditziel")
  ENW                   ENW?               @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auditziel_ENW_ENW")

  @@ignore
}

model Conn_Auftragsart_ENW {
  ID                      Int                  @id(map: "PK_Conn_Auftragsart_ENW") @default(autoincrement())
  Ref_ENW                 Int?
  Ref_EN15085_Auftragsart Int?
  Ref_A_Stelle            Int?
  Ablaufdatum             DateTime?            @db.Date
  A_Stelle                A_Stelle?            @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auftragsart_ENW_A_Stelle")
  EN15085_Auftragsart     EN15085_Auftragsart? @relation(fields: [Ref_EN15085_Auftragsart], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auftragsart_ENW_EN15085_Auftragsart")
  ENW                     ENW?                 @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Auftragsart_ENW_ENW")
}

model Conn_Benutzer_6700 {
  ID           Int       @id(map: "PK_Conn_Benutzer_6700") @default(autoincrement())
  Ref_Benutzer Int?      @default(0, map: "DF_Conn_Benutzer_6700_Ref_Benutzer")
  Ref_Firma    Int?      @default(0, map: "DF_Conn_Benutzer_6700_Ref_Firma")
  Ref_A_Stelle Int?      @default(0, map: "DF_Conn_Benutzer_6700_Ref_A_Stelle")
  master       Boolean?  @default(false, map: "DF_Conn_Benutzer_6700_master")
  POS2         Boolean?
  A_Stelle     A_Stelle? @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Benutzer_6700_A_Stelle")
  Benutzer     Benutzer? @relation(fields: [Ref_Benutzer], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Benutzer_6700_Benutzer")
  Firma        Firma?    @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Benutzer_6700_Firma")
}

model Conn_BMM {
  ID                  Int                   @id(map: "PK_Conn_BAMM") @default(autoincrement())
  Ref_Benutzer        Int?
  Ref_Mandant         Int?
  Ref_Mandantentyp    Int?
  Benutzer            Benutzer?             @relation(fields: [Ref_Benutzer], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_BAMM_Benutzer")
  Mandantentyp        Mandantentyp?         @relation(fields: [Ref_Mandantentyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_BAMM_Mandantentyp")
  Conn_Rolle_Conn_BMM Conn_Rolle_Conn_BMM[]
}

model Conn_DIN6701_CERT_DIN6701_AG_DIN6701_Klasse {
  ID                           Int  @id(map: "PK_Conn_DIN6701_CERT_DIN6701_AG_DIN6701_Klasse") @default(autoincrement())
  Ref_DIN6701_CERT             Int
  Ref_DIN6701_Klasse           Int
  Ref_DIN6701_Anwendungsgebiet Int
  row                          Int?
}

model Conn_DIN6701_CERT_DIN6701_Anwendungsgebiet {
  ID                       Int  @id(map: "PK_Conn_DIN6701_CERT_DIN6701_Anwendungsgebiet") @default(autoincrement())
  Ref_DIN6701_CERT         Int
  Ref_DIN_Anwendungsgebiet Int
  row                      Int?
}

model Conn_DIN6701_CERT_DIN6701_Geltungsbereich {
  ID                          Int  @id(map: "PK_Conn_DIN6701_CERT_DIN6701_Geltungsbereich") @default(autoincrement())
  Ref_DIN6701_CERT            Int
  Ref_DIN6701_Geltungsbereich Int
  row                         Int?
}

model Conn_DIN6701_CERT_Person {
  ID               Int      @id(map: "PK_Conn_DIN6701_CERT_Person") @default(autoincrement())
  Ref_DIN6701_CERT Int
  Ref_Person       Int
  Ref_Personentyp  Int
  row              Int?
  extern           Boolean?

  @@index([Ref_DIN6701_CERT], map: "Conn_DIN6701_CERT_Person_1")
}

model Conn_DIN6701_CERT_Status {
  ID               Int      @id(map: "PK_Conn_DIN6701_CERT_Status") @default(autoincrement())
  Ref_DIN6701_CERT Int
  Ref_Status       Int
  erstellt_am      DateTime @default(now(), map: "DF_Conn_DIN6701_CERT_Status_erstellt_am") @db.DateTime
  erstellt_von     String?  @db.NVarChar(50)

  @@index([Ref_DIN6701_CERT], map: "CertStatusIndex")
}

model Conn_EN1090_CERT_Firma {
  ID              Int     @id(map: "PK_Conn_EN1090_CERT_Firma") @default(autoincrement())
  Ref_EN1090_CERT Int?
  Ref_Firma       Int?
  CompanyCode     String? @db.VarChar(50)
}

model Conn_EN1090_CERT_Status {
  ID                Int       @id(map: "PK_Conn_EN1090_CERT_Status") @default(autoincrement())
  Ref_EN1090_CERT   Int?
  Ref_EN1090_Status Int?
  INSERT_DATUM      DateTime? @db.DateTime
}

model Conn_EN1090_CERT_WSG {
  ID              Int  @id(map: "PK_Conn_EN1090_CERT_WSG") @default(autoincrement())
  Ref_EN1090_CERT Int?
  Ref_EN1090_WSG  Int?
}

model Conn_EN1090_Firma_Kundennummer {
  ID           Int     @id(map: "PK_Conn_EN1090_Firma_Kundennummer") @default(autoincrement())
  Ref_A_Stelle Int?
  Ref_Firma    Int?
  Kundennummer String? @db.VarChar(50)
  CODE         String? @db.VarChar(50)
}

model Conn_EN1090_Person {
  ID              Int             @id(map: "PK_Conn_EN1090_Person") @default(autoincrement())
  Ref_Person      Int?
  Ref_EN1090_CERT Int?
  Ref_Personentyp Int?
  Ref_Aufgabe     Int?
  Aufgabe_Person  Aufgabe_Person? @relation(fields: [Ref_Aufgabe], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Person_Aufgabe_Person")
  EN1090_CERT     EN1090_CERT?    @relation(fields: [Ref_EN1090_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Person_EN1090_CERT")
  Person          Person?         @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Person_Person")
  Personentyp     Personentyp?    @relation(fields: [Ref_Personentyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Person_Personentyp")
}

model Conn_EN1090_Translation {
  ID                  Int              @id(map: "PK_Conn_EN1090_Translation") @default(autoincrement())
  Ref_EN1090_Label    Int?
  Ref_EN1090_Funktion Int?
  Ref_EN1090_Sprache  Int?
  Ref_EN1090_Text     Int?
  EN1090_Funktion     EN1090_Funktion? @relation(fields: [Ref_EN1090_Funktion], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Translation_EN1090_Funktion")
  EN1090_Label        EN1090_Label?    @relation(fields: [Ref_EN1090_Label], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Translation_EN1090_Label")
  EN1090_Sprache      EN1090_Sprache?  @relation(fields: [Ref_EN1090_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Translation_EN1090_Sprache")
  EN1090_Text         EN1090_Text?     @relation(fields: [Ref_EN1090_Text], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN1090_Translation_EN1090_Text")
}

model Conn_EN15085_Auftragsart_ENW {
  ID              Int  @id(map: "PK_Conn_EN15085_Auftragsart_ENW") @default(autoincrement())
  Ref_ENW         Int?
  Ref_EN15085_WIC Int?
}

model Conn_EN15085_WIC_ENW {
  ID              Int          @id(map: "PK_Conn_EN15085_WIC_ENW") @default(autoincrement())
  Ref_ENW         Int?
  Ref_EN15085_WIC Int?
  EN15085_WIC     EN15085_WIC? @relation(fields: [Ref_EN15085_WIC], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN15085_WIC_ENW_EN15085_WIC")
  ENW             ENW?         @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN15085_WIC_ENW_ENW")
}

model Conn_EN15085_WPC_ENW {
  ID              Int          @id(map: "PK_Conn_EN15085_WPC_ENW") @default(autoincrement())
  Ref_ENW         Int?
  Ref_EN15085_WPC Int?
  EN15085_WPC     EN15085_WPC? @relation(fields: [Ref_EN15085_WPC], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN15085_WPC_ENW_EN15085_WPC")
  ENW             ENW?         @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_EN15085_WPC_ENW_ENW")
}

model Conn_ENW_Activity {
  ID           Int       @id(map: "PK_Conn_ENW_Activity") @default(autoincrement())
  Ref_ENW      Int?
  Ref_Activity Int?
  Activity     Activity? @relation(fields: [Ref_Activity], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Activity_Activity")
  ENW          ENW?      @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Activity_ENW")
}

model Conn_ENW_Person {
  ID                            Int            @id(map: "PK_Conn_ENW_Person") @default(autoincrement())
  Ref_Person                    Int?
  Ref_ENW                       Int?
  Ref_Personentyp               Int?
  Ref_Aufgabe                   Int            @default(1, map: "DF_Conn_ENW_Person_Ref_Aufgabe")
  status_Person                 Boolean?
  anonymCert                    Boolean?
  AbnahmeberechtigungPruefungen Boolean?
  Ref_Stufe                     Int?
  ENW                           ENW?           @relation(fields: [Ref_ENW], references: [ID], onDelete: Cascade, map: "FK_Conn_ENW_Person")
  Aufgabe_Person                Aufgabe_Person @relation(fields: [Ref_Aufgabe], references: [ID], onDelete: Cascade, map: "FK_Conn_ENW_Person_Aufgabe_Person")
  Person                        Person?        @relation(fields: [Ref_Person], references: [ID], onDelete: Cascade, map: "FK_Conn_ENW_Person_Person")
  Personentyp                   Personentyp?   @relation(fields: [Ref_Personentyp], references: [ID], onDelete: NoAction, map: "FK_Conn_ENW_Person_Personentyp")
  Stufe                         Stufe?         @relation(fields: [Ref_Stufe], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Person_Stufe")
}

model Conn_ENW_Sprache {
  ID          Int      @id(map: "PK_Conn_ENW_Sprache")
  Ref_ENW     Int?
  Ref_Sprache Int?
  ENW         ENW?     @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Sprache_ENW")
  Sprache     Sprache? @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Sprache_Sprache")
}

model Conn_ENW_Taetigkeitsbereiche_Werkstatt {
  ID                      Int                  @id(map: "PK_Conn_ENW_Taetigkeitsbereiche_Werkstatt") @default(autoincrement())
  Ref_Taetigkeitsbereiche Int?
  Ref_ENW                 Int?
  Ref_Werkstatt           Int?
  ENW                     ENW?                 @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Taetigkeitsbereiche_Werkstatt_ENW")
  Taetigkeitsbereiche     Taetigkeitsbereiche? @relation(fields: [Ref_Taetigkeitsbereiche], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Taetigkeitsbereiche_Werkstatt_Taetigkeitsbereiche")
  Werkstatt               Werkstatt?           @relation(fields: [Ref_Werkstatt], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_ENW_Taetigkeitsbereiche_Werkstatt_Werkstatt")
}

model Conn_Firmenaudit {
  ID        Int      @id(map: "PK_Conn_Firmenaudit") @default(autoincrement())
  Ref_Firma Int?
  Ref_ENW   Int?
  aktiv     Boolean? @default(true, map: "DF_Conn_Firmenaudit_aktiv")
  ENW       ENW?     @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Firmenaudit_ENW")
  Firma     Firma?   @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Firmenaudit_Firma")
}

model Conn_FT {
  ID                     Int                  @id(map: "PK_Conn_FT") @default(autoincrement())
  Ref_Firma              Int?
  Ref_Taetigkeitsbereich Int?
  Ref_ENW                Int?
  ENW                    ENW?                 @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_FT_ENW")
  Firma                  Firma?               @relation(fields: [Ref_Firma], references: [ID], onDelete: Cascade, map: "FK_Conn_FT_Firma")
  Taetigkeitsbereiche    Taetigkeitsbereiche? @relation(fields: [Ref_Taetigkeitsbereich], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_FT_Taetigkeitsbereiche")
}

model Conn_Geltungsbereich_Norm {
  ID                  Int              @id(map: "PK_Conn_Geltungsbereich_Norm") @default(autoincrement())
  Ref_Geltungsbereich Int?
  Ref_Norm            Int?
  Geltungsbereich     Geltungsbereich? @relation(fields: [Ref_Geltungsbereich], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Geltungsbereich_Norm_Geltungsbereich")
  Norm                Norm?            @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Geltungsbereich_Norm_Norm")
}

model Conn_ISO3834_CERT_Status {
  ID               Int      @id(map: "PK_Conn_ISO3834_CERT_Status") @default(autoincrement())
  Ref_ISO3834_CERT Int
  Ref_Status       Int
  erstellt_am      DateTime @default(now(), map: "DF_Conn_ISO3834_CERT_Status_erstellt_am") @db.DateTime
  erstellt_von     String?  @db.NVarChar(50)
}

model Conn_Komm_ENW {
  ID                Int            @id(map: "PK_Conn_Komm_ENW") @default(autoincrement())
  Ref_Kommentar     Int
  Ref_ENW           Int
  Ref_Kommentar_Typ Int?
  row               Int?
  ENW               ENW            @relation(fields: [Ref_ENW], references: [ID], onDelete: Cascade, map: "FK_Conn_Komm_ENW_ENW")
  Kommentar_Typ     Kommentar_Typ? @relation(fields: [Ref_Kommentar_Typ], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Komm_ENW_Kommentar_Typ")
  Kommentare        Kommentare     @relation(fields: [Ref_Kommentar], references: [ID], onDelete: Cascade, map: "FK_Conn_Komm_ENW_Kommentare")
}

model Conn_Kontakt_Person {
  ID             Int    @id(map: "PK_Conn_Kontakt_Person") @default(autoincrement())
  Ref_Person     Int?
  Ref_KontaktTyp Int?
  KontaktWert    String @db.NVarChar(200)
}

model Conn_Kundennummer {
  ID           Int       @id(map: "PK_Conn_Kundennummer") @default(autoincrement())
  Ref_Firma    Int?
  Ref_A_Stelle Int?
  Kundennummer String?   @db.NVarChar(50)
  A_Stelle     A_Stelle? @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Kundennummer_A_Stelle")
  Firma        Firma?    @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Kundennummer_Firma")
}

model Conn_Land_Territorium {
  ID              Int         @id(map: "PK_Conn_Land_Territorium") @default(autoincrement())
  Ref_Land        String      @db.NVarChar(5)
  Ref_Territorium Int
  Laendercode     Laendercode @relation(fields: [Ref_Land], references: [LKZ], onUpdate: NoAction, map: "FK_Conn_Land_Territorium_Laendercode")
  Territorium     Territorium @relation(fields: [Ref_Territorium], references: [ID], onUpdate: NoAction, map: "FK_Conn_Land_Territorium_Territorium")
}

model Conn_Norm_Firma {
  ID        Int   @id(map: "PK_Conn_Norm_Firma") @default(autoincrement())
  Ref_Norm  Int
  Ref_Firma Int
  Firma     Firma @relation(fields: [Ref_Firma], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Firma_Firma")
  Norm      Norm  @relation(fields: [Ref_Norm], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Firma_Norm")
}

model Conn_Norm_Laendercode {
  ID              Int     @id(map: "PK_Conn_Norm_Laendercode") @default(autoincrement())
  Ref_Norm        Int?
  Ref_Laendercode String? @db.NVarChar(5)
  Erweiterung     String? @db.NVarChar(10)
}

model Conn_Norm_Normversion {
  ID              Int  @id(map: "PK_Conn_Norm_Normversion") @default(autoincrement())
  Ref_Norm        Int?
  Ref_Normversion Int?
  Ref_Klasse      Int?
  Ref_Unterklasse Int?
}

model Conn_Norm_Qualifikation {
  ID                Int           @id(map: "PK_Conn_Norm_Qualifikation") @default(autoincrement())
  Ref_Qualifikation Int
  Ref_Norm          Int
  Norm              Norm          @relation(fields: [Ref_Norm], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Qualifikation_Norm")
  Qualifikation     Qualifikation @relation(fields: [Ref_Qualifikation], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Qualifikation_Qualifikation")
}

model Conn_Norm_Schweissverfahren {
  ID                    Int                @id(map: "PK_Conn_Norm_Schweissverfahren") @default(autoincrement())
  Ref_Schweissverfahren Int?
  Ref_Norm              Int?
  Normteil              Int?               @db.SmallInt
  Norm                  Norm?              @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Norm_Schweissverfahren_Norm")
  Schweissverfahren     Schweissverfahren? @relation(fields: [Ref_Schweissverfahren], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Norm_Schweissverfahren_Schweissverfahren")
}

model Conn_Norm_Sprache {
  ID               Int      @id(map: "PK_Conn_Norm_Sprache") @default(autoincrement())
  Ref_Sprache      Int?
  Ref_Norm         Int?
  Surface          Boolean?
  Joincert_Surface Int?
  Joincert_Cert    Int?
  Norm             Norm?    @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Norm_Sprache_Norm")
  Sprache          Sprache? @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Norm_Sprache_Sprache")
}

model Conn_Norm_Werkstoffgruppe {
  ID                          Int                         @id(map: "PK_Conn_Norm_Werkstoffgruppe") @default(autoincrement())
  Ref_Werkstoffgruppe         Int
  Ref_Norm                    Int
  Norm                        Norm                        @relation(fields: [Ref_Norm], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Werkstoffgruppe_Norm")
  Werkstoffgruppen_ISOTR15608 Werkstoffgruppen_ISOTR15608 @relation(fields: [Ref_Werkstoffgruppe], references: [ID], onUpdate: NoAction, map: "FK_Conn_Norm_Werkstoffgruppe_Werkstoffgruppen_ISOTR15608")
}

model Conn_Person_AStelle {
  ID           Int      @id(map: "PK_Conn_Person_AStelle") @default(autoincrement())
  Ref_Person   Int
  Ref_A_Stelle Int
  A_Stelle     A_Stelle @relation(fields: [Ref_A_Stelle], references: [ID], onUpdate: NoAction, map: "FK_Conn_Person_AStelle_A_Stelle")
  Person       Person   @relation(fields: [Ref_Person], references: [ID], onUpdate: NoAction, map: "FK_Conn_Person_AStelle_Person")
}

model Conn_Person_Firma {
  ID         Int     @id(map: "PK_Conn_Person_Firma") @default(autoincrement())
  Ref_Firma  Int?
  Ref_Person Int?
  Telefon    String? @db.VarChar(50)
  E_Mail     String? @db.VarChar(150)
  Firma      Firma?  @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Person_Firma_Firma")
  Person     Person? @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Person_Firma_Person")
}

model Conn_Person_Personentyp_A_Stelle {
  ID              Int         @id(map: "PK_Conn_Person_Personentyp_A_Stelle") @default(autoincrement())
  Ref_Person      Int
  Ref_PersonenTyp Int
  Ref_A_Stelle    Int
  A_Stelle        A_Stelle    @relation(fields: [Ref_A_Stelle], references: [ID], onUpdate: NoAction, map: "FK_Conn_Person_Personentyp_A_Stelle_A_Stelle")
  Auditor         Auditor     @relation(fields: [Ref_Person], references: [ID], onUpdate: NoAction, map: "FK_Conn_Person_Personentyp_A_Stelle_Auditor")
  Personentyp     Personentyp @relation(fields: [Ref_PersonenTyp], references: [ID], onUpdate: NoAction, map: "FK_Conn_Person_Personentyp_A_Stelle_Personentyp")
}

model Conn_Profil_Beschreibung_Firma {
  ID                      Int                  @id(map: "PK_Conn_Profil_Beschreibung_Firma") @default(autoincrement())
  Ref_Firma               Int?
  Ref_Profil_Beschreibung Int?
  Firma                   Firma?               @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Beschreibung_Firma_Firma")
  Profil_Beschreibung     Profil_Beschreibung? @relation(fields: [Ref_Profil_Beschreibung], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Beschreibung_Firma_Profil_Beschreibung")
}

model Conn_Profil_Leistung_Firma {
  ID                  Int              @id(map: "PK_Conn_Profil_Leistung_Firma") @default(autoincrement())
  Ref_Firma           Int?
  Ref_Profil_Leistung Int?
  row                 Int?
  Firma               Firma?           @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Leistung_Firma_Firma")
  Profil_Leistung     Profil_Leistung? @relation(fields: [Ref_Profil_Leistung], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Leistung_Firma_Profil_Leistung")
}

model Conn_Profil_Produkt_Firma {
  ID                 Int             @id(map: "PK_Conn_Profil_Produkt_Firma") @default(autoincrement())
  Ref_Firma          Int?
  Ref_Profil_Produkt Int?
  row                Int?
  Firma              Firma?          @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Produkt_Firma_Firma")
  Profil_Produkt     Profil_Produkt? @relation(fields: [Ref_Profil_Produkt], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Profil_Produkt_Firma_Profil_Produkt")
}

model Conn_RAM {
  ID         Int     @id(map: "PK_Conn_RAM") @default(autoincrement())
  Ref_Rolle  Int?
  Ref_Module Int?
  Module     Module? @relation(fields: [Ref_Module], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_RAM_Module")
  Rolle      Rolle?  @relation(fields: [Ref_Rolle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_RAM_Rolle")
}

model Conn_Rolle_Conn_BMM {
  ID           Int       @id(map: "PK_Conn_Rolle_Conn_BAMM") @default(autoincrement())
  Ref_Rolle    Int?
  Ref_Conn_BMM Int?
  Conn_BMM     Conn_BMM? @relation(fields: [Ref_Conn_BMM], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Rolle_Conn_BAMM_Conn_BAMM")
  Rolle        Rolle?    @relation(fields: [Ref_Rolle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Rolle_Conn_BAMM_Rolle")
}

model Conn_Sprache_Anrede_Adresse {
  ID                 Int             @id(map: "PK_Conn_Sprache_Anrede_Adresse") @default(autoincrement())
  Ref_Anrede_Adresse Int?
  Ref_Sprache        Int?
  Anrede_Adresse     String?         @db.NVarChar(100)
  Anrede_Brief       String?         @db.NVarChar(100)
  Anrede_Adresse2     Anrede_Adresse? @relation(fields: [Ref_Anrede_Adresse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Anrede_Adresse_Anrede_Adresse")
  Sprache            Sprache?        @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Anrede_Adresse_Sprache")
}

model Conn_Sprache_Bauteilklasse {
  ID                Int            @id(map: "PK_Conn_Sprache_Bauteilklasse") @default(autoincrement())
  Ref_Bauteilklasse Int?
  Ref_Sprache       Int?
  Bauteilklasse     String?        @db.VarChar(200)
  kurz              String?        @db.NVarChar(50)
  Bauteilklasse2     Bauteilklasse? @relation(fields: [Ref_Bauteilklasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Bauteilklasse_Bauteilklasse")
  Sprache           Sprache?       @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Bauteilklasse_Sprache")
}

model Conn_Sprache_Bundesland {
  ID             Int         @id(map: "PK_Conn_Sprache_Bundesland") @default(autoincrement())
  Ref_Bundesland Int?
  Ref_Sprache    Int?
  Bundesland     String?     @db.VarChar(100)
  Kurz           String?     @db.VarChar(10)
  Bundesland2     Bundesland? @relation(fields: [Ref_Bundesland], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Bundesland_Bundesland")
  Sprache        Sprache?    @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Bundesland_Sprache")
}

model Conn_Sprache_Geltungsbereich {
  ID                  Int              @id(map: "PK_Conn_Sprache_Geltungsbereich") @default(autoincrement())
  Ref_Geltungsbereich Int?
  Ref_Sprache         Int?
  Geltungsbereich     String?          @db.VarChar(100)
  Geltungsbereich2     Geltungsbereich? @relation(fields: [Ref_Geltungsbereich], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Geltungsbereich_Geltungsbereich")
  Sprache             Sprache?         @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Geltungsbereich_Sprache")
}

model Conn_Sprache_Laendercode {
  ID          Int      @id(map: "PK_Conn_Sprache_Laendercode") @default(autoincrement())
  Ref_LKZ     String?  @db.NVarChar(5)
  Ref_Sprache Int?
  Lang        String?  @db.VarChar(100)
  Sprache     Sprache? @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Laendercode_Sprache")
}

model Conn_Sprache_Personentyp {
  ID              Int          @id(map: "PK_Conn_Sprache_Personentyp") @default(autoincrement())
  Ref_Personentyp Int?
  Ref_Sprache     Int?
  Ref_Norm        Int?
  Typ             String?      @db.NVarChar(100)
  row             Int?
  Norm            Norm?        @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Personentyp_Norm")
  Personentyp     Personentyp? @relation(fields: [Ref_Personentyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Personentyp_Personentyp")
  Sprache         Sprache?     @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Personentyp_Sprache")
}

model Conn_Sprache_Qualifikation {
  ID                Int            @id(map: "PK_Conn_Sprache_Qualifikation") @default(autoincrement())
  Ref_Qualifikation Int?
  Ref_Sprache       Int?
  Qualifikation     String?        @db.VarChar(100)
  Qualifikation2     Qualifikation? @relation(fields: [Ref_Qualifikation], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Qualifikation_Qualifikation")
  Sprache           Sprache?       @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Qualifikation_Sprache")
}

model Conn_Sprache_Titel {
  ID          Int      @id(map: "PK_Conn_Sprache_Titel") @default(autoincrement())
  Ref_Titel   Int?
  Ref_Sprache Int?
  Titel       String?  @db.NVarChar(100)
  Sprache     Sprache? @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Titel_Sprache")
  Titel2       Titel?   @relation(fields: [Ref_Titel], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Sprache_Titel_Titel")
}

model Conn_Stufe_Norm {
  ID        Int   @id(map: "PK_Conn_Stufe_Norm") @default(autoincrement())
  Ref_Stufe Int
  Ref_Norm  Int
  Norm      Norm  @relation(fields: [Ref_Norm], references: [ID], onUpdate: NoAction, map: "FK_Conn_Stufe_Norm_Norm")
  Stufe     Stufe @relation(fields: [Ref_Stufe], references: [ID], onUpdate: NoAction, map: "FK_Conn_Stufe_Norm_Stufe")
}

model Conn_Taetigkeitsbereiche_Bauteilklasse {
  ID                      Int                  @id(map: "PK_Conn_Taetigkeitsbereiche_Bauteilklasse") @default(autoincrement())
  Ref_Taetigkeitsbereiche Int?
  Ref_Bauteilklasse       Int?
  Bauteilklasse           Bauteilklasse?       @relation(fields: [Ref_Bauteilklasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Taetigkeitsbereiche_Bauteilklasse_Bauteilklasse")
  Taetigkeitsbereiche     Taetigkeitsbereiche? @relation(fields: [Ref_Taetigkeitsbereiche], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Conn_Taetigkeitsbereiche_Bauteilklasse_Taetigkeitsbereiche")
}

model Content {
  ID      Int     @id(map: "PK_Content") @default(autoincrement())
  Content String? @db.Text
}

model Content1 {
  ID      Int     @id(map: "PK_Content1")
  Content String? @db.Text
}

model DIN6701_Anwendungsgebiet {
  ID      Int      @id(map: "PK_DIN6701_Anwendungsgebiet") @default(autoincrement())
  Text_DE String?  @db.NVarChar(150)
  Text_EN String?  @db.NVarChar(150)
  aktiv   Boolean?
  Text_HU String?  @db.NVarChar(300)
}

model DIN6701_Bemerkungen {
  ID               Int     @id(map: "PK_DIN6701_Bemerkungen") @default(autoincrement())
  Ref_DIN6701_CERT Int
  row              Int?
  Bemerkung        String?
  Ref_Sprache      Int?
}

model DIN6701_CERT {
  ID                 Int       @id(map: "PK_DIN6701_CERT") @default(autoincrement())
  Ref_A_Stelle       Int?
  Ref_Firma          Int?
  Ref_DIN6701_Klasse Int?
  Ref_Norm           Int?
  Ref_Audit          Int?
  Ref_Sprache        Int?
  Ref_Mutter         Int?
  Jahr               Int?
  Nummer             String?   @db.NVarChar(100)
  gueltig_von        DateTime? @db.Date
  gueltig_bis        DateTime? @db.Date
  aktiv              Boolean?
  erstellt_am        DateTime? @db.DateTime
  erstellt_von       String?   @db.NVarChar(50)
  ausgestellt_am     DateTime? @db.Date
  naechstesAudit_am  DateTime? @db.Date
  Art                String?   @db.VarChar(10)
  geaendert_am       DateTime? @db.Date
  archiv             Boolean?
}

model DIN6701_Geltungsbereich {
  ID                     Int     @id(map: "PK_DIN6701_Geltungsbereich") @default(autoincrement())
  Code                   String  @db.NVarChar(10)
  Ref_GeltungsbereichTyp Int
  Text_DE                String? @db.NVarChar(100)
  Text_EN                String? @db.NVarChar(100)
  Text_HU                String? @db.NVarChar(200)
}

model DIN6701_Geltungsbereich_Freitext {
  ID                     Int     @id(map: "PK_DIN6701_Geltungsbereich_Freitext") @default(autoincrement())
  Ref_DIN6701_CERT       Int
  Ref_GeltungsbereichTyp Int
  row                    Int?
  Text_DE                String? @db.NVarChar(150)
  Text_EN                String? @db.NVarChar(150)
  Text_HU                String? @db.NVarChar(300)
}

model DIN6701_GeltungsbereichTyp {
  ID      Int     @id(map: "PK_DIN6701_GeltungsbereichTyp") @default(autoincrement())
  Text_DE String? @db.NVarChar(50)
  Text_EN String  @db.NVarChar(50)
  Text_HU String? @db.NVarChar(100)
}

model DIN6701_Klasse {
  ID              Int     @id(map: "PK_DIN6701_Klasse")
  Klasse          String  @db.NVarChar(10)
  Beschreibung_DE String? @db.NVarChar(250)
  Beschreibung_HU String? @db.NVarChar(500)
}

model DIN6701_Status {
  ID           Int     @id(map: "PK_DIN6701_Status")
  Status_DE    String  @db.NVarChar(50)
  Status_EN    String  @db.NVarChar(50)
  status_class String? @db.NVarChar(50)
  Status_HU    String? @db.NVarChar(100)
}

model Dokumente {
  ID                Int            @id(map: "PK_Dokumente") @default(autoincrement())
  Filename          String?        @db.NVarChar(100)
  Filename_Original String?        @db.NVarChar(200)
  Verzeichnis       String?        @db.NVarChar(200)
  Datum             DateTime?      @db.DateTime
  Ref_ENW           Int?
  Ref_Dokumentenart Int?
  row               Int?
  aktiv             Boolean?
  Dokumentenart     Dokumentenart? @relation(fields: [Ref_Dokumentenart], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Dokumente_Dokumentenart")
  ENW               ENW?           @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Dokumente_ENW")
}

model Dokumentenart {
  ID        Int         @id(map: "PK_Dokumentenart") @default(autoincrement())
  Art       String?     @db.NVarChar(100)
  Art_DE    String?     @db.NVarChar(100)
  Art_EN    String?     @db.NVarChar(100)
  Art_FR    String?     @db.NVarChar(100)
  Art_IT    String?     @db.NVarChar(100)
  Art_PL    String?     @db.NVarChar(100)
  Art_ES    String?     @db.NVarChar(100)
  Art_HU    String?     @db.NVarChar(200)
  Dokumente Dokumente[]
}

model ECWRV_Files {
  ID                Int       @id(map: "PK_ECWRVFiles") @default(autoincrement())
  Ref_A_Stelle      Int?
  DateiTyp          Int?      @db.TinyInt
  DateiName         String?   @db.VarChar(100)
  DateiPfad         String?   @db.VarChar(200)
  DateiBeschreibung String?   @db.VarChar(50)
  A_Stelle          A_Stelle? @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ECWRV_Files_A_Stelle")
}

model ECWRV_Recognition {
  ID                    Int      @id(map: "PK_ECWRV_Recognition") @default(autoincrement())
  Ref_A_Stelle          Int
  Identification_Number String   @db.VarChar(50)
  valid_from            DateTime @db.Date
  valid_to              DateTime @db.Date
  issued_on             DateTime @db.Date
  Ref_Assesor_1         Int?
  Ref_Assesor_2         Int?
  status                Int?     @db.TinyInt
  Ref_Assesor_3         Int?
  A_Stelle              A_Stelle @relation(fields: [Ref_A_Stelle], references: [ID], onUpdate: NoAction, map: "FK_ECWRV_Recognition_A_Stelle")
}

model EN1090_Ausstellungsort {
  ID              Int           @id(map: "PK_EN1090_Ausstellungsort") @default(autoincrement())
  Ausstellungsort String?       @db.VarChar(50)
  EN1090_CERT     EN1090_CERT[]
}

model EN1090_Bemerkung {
  ID                    Int                @id(map: "PK_EN1090_Bemerkung") @default(autoincrement())
  Ref_EN1090_CERT       Int?
  Bemerkung             String?            @db.NVarChar(4000)
  Ref_Sprache           Int?
  row                   Int?
  CERT_Nummer           String?            @db.NVarChar(100)
  Ref_EN1090_CERTStelle Int?
  Ablaufdatum           DateTime?          @db.Date
  EN1090_CERT           EN1090_CERT?       @relation(fields: [Ref_EN1090_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Bemerkung_EN1090_CERT")
  EN1090_CERTStelle     EN1090_CERTStelle? @relation(fields: [Ref_EN1090_CERTStelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Bemerkung_EN1090_CERTStelle")
  Sprache               Sprache?           @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Bemerkung_Sprache")
}

model EN1090_CERT {
  ID                         Int                     @id(map: "PK_EN1090_CERT") @default(autoincrement())
  Nummer                     String?                 @db.VarChar(5)
  Ref_A_Stelle               Int?
  Jahr                       String?                 @db.VarChar(4)
  Ref_EN1090_Version         Int?
  Ref_Norm                   Int?
  CERT_Nummer                String?                 @db.VarChar(40)
  Datum_Beginn               DateTime?               @db.Date
  Ref_Audit                  Int?
  Ref_EN1090_Ausstellungsort Int?
  ausgestellt_am             DateTime?               @db.Date
  Ref_Mutter                 Int?
  Ref_Sprache                Int?
  erstellt_am                DateTime?               @db.Date
  erstellt_durch             Int?
  geaendert_am               DateTime?               @db.Date
  geaendert_durch            Int?
  aktiv                      Boolean?
  Ref_Firma                  Int?
  Konstruktion               Boolean?
  Korrosion                  Boolean?
  Ref_EN1090_CEVerfahren     Int?
  Ref_EN1090_Klasse          Int?
  Ref_ZNorm                  Int?
  INSERT_DATUM               DateTime?               @db.DateTime
  OwnNumber                  String?                 @db.NVarChar(100)
  Produktion                 Boolean?
  Schneiden                  Boolean?
  Schweissen                 Boolean?
  Waerme                     Boolean?
  Verbinden                  Boolean?
  Datum_Ende                 DateTime?               @db.Date
  Conn_EN1090_Person         Conn_EN1090_Person[]
  EN1090_Bemerkung           EN1090_Bemerkung[]
  A_Stelle                   A_Stelle?               @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_A_Stelle")
  Audit                      Audit?                  @relation(fields: [Ref_Audit], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_Audit")
  EN1090_Ausstellungsort     EN1090_Ausstellungsort? @relation(fields: [Ref_EN1090_Ausstellungsort], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_EN1090_Ausstellungsort")
  EN1090_CEVerfahren         EN1090_CEVerfahren?     @relation(fields: [Ref_EN1090_CEVerfahren], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_EN1090_CEVerfahren")
  EN1090_Klasse              EN1090_Klasse?          @relation(fields: [Ref_EN1090_Klasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_EN1090_Klasse")
  EN1090_Version             EN1090_Version?         @relation(fields: [Ref_EN1090_Version], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_EN1090_Version")
  Firma                      Firma?                  @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_Firma")
  Norm                       Norm?                   @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_Norm")
  Sprache                    Sprache?                @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_CERT_Sprache")
  EN1090_Kenndaten           EN1090_Kenndaten[]
}

model EN1090_CERTStelle {
  ID               Int                @id(map: "PK_EN1090_CERTStelle") @default(autoincrement())
  CERTStelle       String?            @db.VarChar(50)
  EN1090_Bemerkung EN1090_Bemerkung[]
}

model EN1090_CEVerfahren {
  ID          Int           @id(map: "PK_EN1090_CEVerfahren") @default(autoincrement())
  CEVerfahren String?       @db.VarChar(50)
  EN1090_CERT EN1090_CERT[]
}

model EN1090_Funktion {
  ID                      Int                       @id(map: "PK_EN1090_Funktion") @default(autoincrement())
  Funktion                String?                   @db.VarChar(50)
  Conn_EN1090_Translation Conn_EN1090_Translation[]
  EN1090_Translate        EN1090_Translate[]        @ignore
}

model EN1090_Kenndaten {
  ID                    Int                @id(map: "PK_EN1090_Kenndaten") @default(autoincrement())
  Ref_Schweissverfahren Int?
  Ref_Mech_Grad         Int?
  Ref_Grundwerkstoff    Int?
  Ref_Norm              Int?
  Ref_EN1090_CERT       Int?
  EN1090_CERT           EN1090_CERT?       @relation(fields: [Ref_EN1090_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Kenndaten_EN1090_CERT")
  Grundwerkstoff        Grundwerkstoff?    @relation(fields: [Ref_Grundwerkstoff], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Kenndaten_Grundwerkstoff")
  Mech_Grad             Mech_Grad?         @relation(fields: [Ref_Mech_Grad], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Kenndaten_Mech_Grad")
  Norm                  Norm?              @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Kenndaten_Norm")
  Schweissverfahren     Schweissverfahren? @relation(fields: [Ref_Schweissverfahren], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Kenndaten_Schweissverfahren")
}

model EN1090_Klasse {
  ID          Int           @id(map: "PK_EN1090_Klasse") @default(autoincrement())
  EXC         String?       @db.VarChar(20)
  EN1090_CERT EN1090_CERT[]
}

model EN1090_Label {
  ID                      Int                       @id(map: "PK_EN1090_Label") @default(autoincrement())
  Label                   String?                   @db.VarChar(50)
  Conn_EN1090_Translation Conn_EN1090_Translation[]
  EN1090_Translate        EN1090_Translate[]        @ignore
}

model EN1090_Normversion {
  ID       Int       @id(map: "PK_EN1090_Normversion") @default(autoincrement())
  Ref_Norm Int?
  Beginn   DateTime? @db.Date
  Text     String?   @db.VarChar(50)
}

model EN1090_OPEN {
  ID           Int  @id(map: "PK_EN1090_OPEN")
  Ref_Firma    Int?
  Ref_Norm     Int?
  Ref_A_Stelle Int?
}

model EN1090_Produktion {
  ID              Int     @id(map: "PK_EN1090_Produktion") @default(autoincrement())
  Ref_EN1090_CERT Int?
  Ref_Sprache     Int?
  Produktion      String? @db.NVarChar(200)
  row             Int?
}

model EN1090_Sprache {
  ID                      Int                       @id(map: "PK_EN1090_Sprache") @default(autoincrement())
  Sprache                 String?                   @db.VarChar(50)
  Kurz                    String?                   @db.VarChar(10)
  public                  Boolean?
  Conn_EN1090_Translation Conn_EN1090_Translation[]
}

model EN1090_Status {
  ID        Int     @id(map: "PK_EN1090_Status") @default(autoincrement())
  Status_DE String? @db.NVarChar(100)
  Status_EN String? @db.NVarChar(100)
  Status_HU String? @db.NVarChar(200)
}

model EN1090_Text {
  ID                      Int                       @id(map: "PK_EN1090_Text") @default(autoincrement())
  Text                    String?                   @db.VarChar(500)
  Conn_EN1090_Translation Conn_EN1090_Translation[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model EN1090_Translate {
  ID                  Int              @default(autoincrement())
  Ref_EN1090_Funktion Int?
  Ref_EN1090_Label    Int?
  Text_DE             String?          @db.NVarChar(2000)
  Text_EN             String?          @db.NVarChar(2000)
  Text_PL             String?          @db.NVarChar(2000)
  Text_FR             String?          @db.NVarChar(2000)
  Text_IT             String?          @db.NVarChar(2000)
  Text_ES             String?          @db.NVarChar(2000)
  text_HU             String?          @db.NVarChar(2000)
  EN1090_Funktion     EN1090_Funktion? @relation(fields: [Ref_EN1090_Funktion], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Translate_EN1090_Funktion")
  EN1090_Label        EN1090_Label?    @relation(fields: [Ref_EN1090_Label], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EN1090_Translate_EN1090_Label")

  @@ignore
}

model EN1090_Version {
  ID          Int           @id(map: "PK_EN1090_Version") @default(autoincrement())
  Version     String?       @db.VarChar(50)
  EN1090_CERT EN1090_CERT[]
}

model EN1090_WSG {
  ID                     Int     @id(map: "PK_EN1090_WSG") @default(autoincrement())
  WSG                    String? @db.NVarChar(50)
  Ref_EN1090_WSG_Tabelle Int?
  Ref_Norm               Int?
}

model EN1090_WSG_Tabelle {
  ID         Int     @id(map: "PK_EN1090_WSG_Tabelle") @default(autoincrement())
  Tabelle_DE String? @db.NVarChar(100)
  Tabelle_EN String? @db.NVarChar(100)
  Tabelle_PL String? @db.NVarChar(100)
  Tabelle_RU String? @db.NVarChar(100)
  Tabelle_FR String? @db.NVarChar(100)
  Tabelle_IT String? @db.NVarChar(100)
  Tabelle_HU String? @db.NVarChar(200)
}

model EN15085_Auditziel {
  ID                 Int                  @id(map: "PK_EN15085_Auditziel") @default(autoincrement())
  Auditziel          String?              @db.NVarChar(50)
  DE                 String?              @db.NVarChar(50)
  EN                 String?              @db.NVarChar(50)
  FR                 String?              @db.NVarChar(50)
  IT                 String?              @db.NVarChar(50)
  PL                 String?              @db.NVarChar(50)
  ES                 String?              @db.NVarChar(50)
  Conn_Auditziel_ENW Conn_Auditziel_ENW[] @ignore
}

model EN15085_Auftragsart {
  ID                   Int                    @id(map: "PK_EN15085_Auftragsart") @default(autoincrement())
  Auftragsart          String?                @db.NVarChar(50)
  Auftragsart_DE       String?                @db.NVarChar(50)
  Auftragsart_EN       String?                @db.NVarChar(50)
  Auftragsart_IT       String?                @db.NVarChar(50)
  Auftragsart_FR       String?                @db.NVarChar(50)
  Auftragsart_PL       String?                @db.NVarChar(50)
  Auftragsart_ES       String?                @db.NVarChar(50)
  Auftragsart_HU       String?                @db.NVarChar(100)
  Conn_Auftragsart_ENW Conn_Auftragsart_ENW[]
}

model EN15085_Normversion {
  ID       Int       @id(map: "PK_EN15085_Normversion") @default(autoincrement())
  Ref_Norm Int?
  Beginn   DateTime? @db.Date
  Text     String?   @db.NVarChar(50)
}

model EN15085_Translate {
  Id              Int      @id(map: "PK__EN15085___3214EC0744AC9DE4") @default(autoincrement())
  section_id      String?  @db.VarChar(50)
  label_id        Int?
  Enable_Markdown Boolean? @default(false, map: "DF__EN15085_T__Enabl__4694E656")
  Text_DE         String?  @db.VarChar(800)
  Text_EN         String?  @db.VarChar(800)
  Text_HU         String?  @db.NVarChar(800)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model EN15085_Unterschreiber {
  ID              Int  @default(autoincrement())
  Ref_ENW         Int?
  Ref_Auditor     Int?
  Ref_Personentyp Int?

  @@ignore
}

model EN15085_WIC {
  ID                   Int                    @id(map: "PK_EN15085_WIC") @default(autoincrement())
  WIC                  String?                @db.NVarChar(10)
  DE                   String?                @db.NVarChar(10)
  EN                   String?                @db.NVarChar(10)
  FR                   String?                @db.NVarChar(10)
  IT                   String?                @db.NVarChar(10)
  PL                   String?                @db.NVarChar(10)
  ES                   String?                @db.NVarChar(10)
  Conn_EN15085_WIC_ENW Conn_EN15085_WIC_ENW[]
}

model EN15085_WPC {
  ID                   Int                    @id(map: "PK_EN15085_WPC") @default(autoincrement())
  WPC                  String?                @db.NVarChar(10)
  DE                   String?                @db.NVarChar(10)
  EN                   String?                @db.NVarChar(10)
  FR                   String?                @db.NVarChar(10)
  IT                   String?                @db.NVarChar(10)
  PL                   String?                @db.NVarChar(10)
  ES                   String?                @db.NVarChar(10)
  Conn_EN15085_WPC_ENW Conn_EN15085_WPC_ENW[]
}

model EN17460_Anwendungsgebiet {
  ID      Int      @id(map: "PK_EN17460_Anwendungsgebiet") @default(autoincrement())
  Text_DE String?  @db.NVarChar(150)
  Text_EN String?  @db.NVarChar(150)
  aktiv   Boolean?
}

model EN17460_GeltungsbereichTyp {
  ID      Int     @id(map: "PK_EN17460_GeltungsbereichTyp") @default(autoincrement())
  Text_DE String? @db.NVarChar(100)
  Text_EN String  @db.NVarChar(100)
  Text_HU String? @db.NVarChar(100)
}

model ENW {
  ID                                     Int                                      @id(map: "PK_ENW") @default(autoincrement())
  Ref_A_Stelle                           Int?
  Ref_Unterklasse                        Int?
  Ref_Norm                               Int?
  Nummer                                 String?                                  @db.NVarChar(3)
  Ref_Nachweis_Art                       Int?
  Jahr                                   String?                                  @db.NVarChar(2)
  ENW_Nummer                             String?                                  @db.NVarChar(50)
  Geltungsdauer                          DateTime?                                @db.SmallDateTime
  Ausstellungsdatum                      DateTime?                                @db.SmallDateTime
  Erstellt_am                            DateTime?                                @db.SmallDateTime
  Geaendert_am                           DateTime?                                @db.SmallDateTime
  Ref_Firma                              Int
  Ref_Bezeichnung                        Int
  Ref_Sprache                            Int?
  Ref_Audit                              Int?
  Erstellt_durch                         Int?
  Geaendert_durch                        Int?
  aktiv                                  Boolean?
  Ref_Mutter                             Int?
  XML_send                               Boolean?                                 @default(false, map: "DF__ENW__XML_send__737017C0")
  Geltungsdauer_start                    DateTime?                                @db.SmallDateTime
  INSERT_DATUM                           DateTime?                                @db.DateTime
  DIN27201                               Boolean?
  OWNNUMBER                              String?                                  @db.NVarChar(50)
  Ref_Zertifikatstyp                     Int                                      @default(1, map: "DF_ENW_Ref_Zertifikatstyp")
  Conn_AG_ENW                            Conn_AG_ENW[]
  Conn_Auditziel_ENW                     Conn_Auditziel_ENW[]                     @ignore
  Conn_Auftragsart_ENW                   Conn_Auftragsart_ENW[]
  Conn_EN15085_WIC_ENW                   Conn_EN15085_WIC_ENW[]
  Conn_EN15085_WPC_ENW                   Conn_EN15085_WPC_ENW[]
  Conn_ENW_Activity                      Conn_ENW_Activity[]
  Conn_ENW_Person                        Conn_ENW_Person[]
  Conn_ENW_Sprache                       Conn_ENW_Sprache[]
  Conn_ENW_Taetigkeitsbereiche_Werkstatt Conn_ENW_Taetigkeitsbereiche_Werkstatt[]
  Conn_Firmenaudit                       Conn_Firmenaudit[]
  Conn_FT                                Conn_FT[]
  Conn_Komm_ENW                          Conn_Komm_ENW[]
  Dokumente                              Dokumente[]
  A_Stelle                               A_Stelle?                                @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_A_Stelle")
  Audit                                  Audit?                                   @relation(fields: [Ref_Audit], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Audit")
  ENW                                    ENW?                                     @relation("ENWToENW", fields: [Ref_Mutter], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_ENW")
  other_ENW                              ENW[]                                    @relation("ENWToENW")
  Firma                                  Firma                                    @relation(fields: [Ref_Firma], references: [ID], onUpdate: NoAction, map: "FK_ENW_Firma")
  Nachweis_Art                           Nachweis_Art?                            @relation(fields: [Ref_Nachweis_Art], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Nachweis_Art")
  Nachweisbezeichnung                    Nachweisbezeichnung                      @relation(fields: [Ref_Bezeichnung], references: [ID], onUpdate: NoAction, map: "FK_ENW_Nachweisbezeichnung")
  Norm                                   Norm?                                    @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Norm")
  Sprache                                Sprache?                                 @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Sprache")
  Unterklasse                            Unterklasse?                             @relation(fields: [Ref_Unterklasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Unterklasse")
  ENW_Zertifikatstyp                     ENW_Zertifikatstyp                       @relation(fields: [Ref_Zertifikatstyp], references: [Id], onUpdate: NoAction, map: "FK_ENW_Zertifikatstyp")
  ENW_Bemerkung                          ENW_Bemerkung[]
  ENW_Status                             ENW_Status[]
  ISO17660_Conn_CERT_Schweissverfahren   ISO17660_Conn_CERT_Schweissverfahren[]
  ISO17660_Conn_CERT_Verbindungsart      ISO17660_Conn_CERT_Verbindungsart[]
  ISO17660_Conn_CERT_WSG                 ISO17660_Conn_CERT_WSG[]
  Kenndaten                              Kenndaten[]
}

model ENW_Bemerkung {
  IDBem       Int     @id(clustered: false, map: "PK_ENW_Bemerkung") @default(autoincrement())
  Ref_ENW     Int
  Bemerkung   String? @db.NVarChar(Max)
  Row         Int
  Ref_Sprache Int?
  ENW         ENW     @relation(fields: [Ref_ENW], references: [ID], onDelete: Cascade, map: "FK_ENW_Bemerkung_ENW")

  @@index([IDBem, Ref_ENW], map: "IX_1", clustered: true)
}

model ENW_Status {
  ID           Int       @id(map: "PK_ENW_Status") @default(autoincrement())
  Ref_ENW      Int?
  Ref_Status   Int?
  INSERT_DATUM DateTime? @db.DateTime
  ENW          ENW?      @relation(fields: [Ref_ENW], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Status_ENW")
  Status       Status?   @relation(fields: [Ref_Status], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Status_Status")
}

model ENW_Zertifikatstyp {
  Id     Int     @id(map: "PK_ENW_Zertifikatstyp")
  Art    String? @db.VarChar(50)
  Art_DE String? @db.NVarChar(100)
  Art_EN String? @db.NVarChar(100)
  Art_PL String? @db.NVarChar(100)
  Art_FR String? @db.NVarChar(100)
  Art_IT String? @db.NVarChar(100)
  Art_HU String? @db.NVarChar(200)
  ENW    ENW[]
}

model Favoriten {
  ID               Int       @id(map: "PK_Favoriten") @default(autoincrement())
  CertID           Int
  NormID           Int
  Benutzer         Int
  StartDatum       DateTime? @db.Date
  EndeDatum        DateTime? @db.Date
  InfoPerDashboard Boolean?
  InfoPerMail      Boolean?
  InfoGesendet     Boolean?
  LetzteInfo       DateTime? @db.DateTime
  erstellt_am      DateTime? @db.DateTime
  geaendert_am     DateTime? @db.DateTime
  aktiv            Boolean?
}

model File {
  ID          Int           @id(map: "PK_File") @default(autoincrement())
  Datei       String?       @db.VarChar(50)
  Translation Translation[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model File1 {
  ID    Int
  Datei String? @db.VarChar(50)

  @@ignore
}

model Firma {
  ID                                      Int                              @id(map: "PK_Firma") @default(autoincrement())
  Firma_Name_1                            String?                          @db.NVarChar(100)
  Firma_Name_2                            String?                          @db.NVarChar(100)
  Firma_Name_3                            String?                          @db.NVarChar(100)
  Strasse                                 String?                          @db.NVarChar(200)
  Ort                                     String?                          @db.NVarChar(100)
  PLZ                                     String?                          @db.VarChar(50)
  LKZ                                     String?                          @db.NVarChar(5)
  Telefon                                 String?                          @db.VarChar(50)
  Fax                                     String?                          @db.VarChar(50)
  E_Mail                                  String?                          @db.NVarChar(100)
  Internet                                String?                          @db.NVarChar(100)
  Ref_Mutter                              Int?
  Kundennummer                            String?                          @db.NVarChar(100)
  Ref_Bundesland                          Int?
  Ref_Person                              Int?
  contact                                 Boolean?                         @default(false, map: "DF_Firma_contact")
  Vorgang                                 Boolean?                         @default(false, map: "DF_Firma_Vorgang")
  free_cert                               Boolean?
  CODENAME                                String?                          @db.NVarChar(100)
  USTIDNR                                 String?                          @db.NVarChar(50)
  Ortsteil                                String?                          @db.NVarChar(100)
  Lat                                     Decimal?                         @db.Decimal(14, 10)
  Long                                    Decimal?                         @db.Decimal(14, 10)
  LatLongQuality                          Decimal?                         @db.Decimal(1, 0)
  Formated                                String?                          @db.NVarChar(200)
  Unternehmensgroesse                     Boolean?
  Ref_Konzern                             Int?
  Ref_Vorgaenger                          Int?
  Conn_Benutzer_6700                      Conn_Benutzer_6700[]
  Conn_Firmenaudit                        Conn_Firmenaudit[]
  Conn_FT                                 Conn_FT[]
  Conn_Kundennummer                       Conn_Kundennummer[]
  Conn_Norm_Firma                         Conn_Norm_Firma[]
  Conn_Person_Firma                       Conn_Person_Firma[]
  Conn_Profil_Beschreibung_Firma          Conn_Profil_Beschreibung_Firma[]
  Conn_Profil_Leistung_Firma              Conn_Profil_Leistung_Firma[]
  Conn_Profil_Produkt_Firma               Conn_Profil_Produkt_Firma[]
  EN1090_CERT                             EN1090_CERT[]
  ENW                                     ENW[]
  Bundesland                              Bundesland?                      @relation(fields: [Ref_Bundesland], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Bundesland")
  Firma_Firma_Ref_MutterToFirma           Firma?                           @relation("Firma_Ref_MutterToFirma", fields: [Ref_Mutter], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Firma")
  other_Firma_Firma_Ref_MutterToFirma     Firma[]                          @relation("Firma_Ref_MutterToFirma")
  Firma_Firma_IDToFirma                   Firma                            @relation("Firma_IDToFirma", fields: [ID], references: [ID], onUpdate: NoAction, map: "FK_Firma_Firma1")
  other_Firma_Firma_IDToFirma             Firma?                           @relation("Firma_IDToFirma")
  Firma_Firma_Ref_KonzernToFirma          Firma?                           @relation("Firma_Ref_KonzernToFirma", fields: [Ref_Konzern], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Firma2")
  other_Firma_Firma_Ref_KonzernToFirma    Firma[]                          @relation("Firma_Ref_KonzernToFirma")
  Firma_Firma_Ref_VorgaengerToFirma       Firma?                           @relation("Firma_Ref_VorgaengerToFirma", fields: [Ref_Vorgaenger], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Firma3")
  other_Firma_Firma_Ref_VorgaengerToFirma Firma[]                          @relation("Firma_Ref_VorgaengerToFirma")
  Laendercode                             Laendercode?                     @relation(fields: [LKZ], references: [LKZ], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Laendercode")
  Person                                  Person?                          @relation(fields: [Ref_Person], references: [ID], onDelete: NoAction, map: "FK_Firma_Person")
  Profil_Personal                         Profil_Personal[]
  Werkstatt                               Werkstatt[]
}

model Firma_Files {
  ID                Int       @id(map: "PK_Firma_Files") @default(autoincrement())
  Ref_Firma         Int
  Ref_A_Stelle      Int
  Ref_Norm          Int
  DateiTyp          Int?      @db.TinyInt
  DateiName         String?   @db.NVarChar(100)
  DateiPfad         String?   @db.NVarChar(150)
  DateiBeschreibung String?   @db.NVarChar(150)
  createUser        String?   @db.NVarChar(50)
  createDate        DateTime? @db.DateTime
  editUser          String?   @db.NVarChar(50)
  editDate          DateTime? @db.DateTime
}

model Firma_Selbst {
  ID                Int             @id(map: "PK_Firma_Selbst") @default(autoincrement())
  Firma_Name_1      String?         @db.NVarChar(150)
  Firma_Name_2      String?         @db.NVarChar(150)
  Firma_Name_3      String?         @db.NVarChar(150)
  Strasse           String?         @db.NVarChar(200)
  Ort               String?         @db.NVarChar(100)
  PLZ               String?         @db.VarChar(50)
  LKZ               String?         @db.NVarChar(5)
  Telefon           String?         @db.VarChar(50)
  Fax               String?         @db.VarChar(50)
  E_Mail            String?         @db.NVarChar(100)
  Internet          String?         @db.NVarChar(100)
  Kundennummer      String?         @db.NVarChar(100)
  USTIDNR           String?         @db.NVarChar(50)
  Ortsteil          String?         @db.NVarChar(100)
  Formated          String?         @db.NVarChar(200)
  Person_name       String?         @db.NVarChar(200)
  Person_vorname    String?         @db.NVarChar(200)
  Ref_Anrede        Int?
  Ref_A_Stelle      Int?
  base64_doc        String?         @db.NVarChar(Max)
  DateiName         String?         @db.NVarChar(100)
  DateiPfad         String?         @db.NVarChar(150)
  DateiBeschreibung String?         @db.NVarChar(150)
  createUser        String?         @db.NVarChar(50)
  createDate        DateTime?       @db.DateTime
  editUser          String?         @db.NVarChar(50)
  editDate          DateTime?       @db.DateTime
  A_Stelle          A_Stelle?       @relation(fields: [Ref_A_Stelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Selbst_A_Stelle")
  Anrede_Adresse    Anrede_Adresse? @relation(fields: [Ref_Anrede], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Firma_Selbst_Anrede_Adresse")
}

model Geltungsbereich {
  ID                           Int                            @id(map: "PK_Geltungsbereich") @default(autoincrement())
  Geltungsbereich              String?                        @db.VarChar(75)
  Geltungsbereich_DE           String?                        @db.NVarChar(255)
  Geltungsbereich_EN           String?                        @db.NVarChar(255)
  Geltungsbereich_FR           String?                        @db.NVarChar(255)
  Geltungsbereich_IT           String?                        @db.NVarChar(255)
  Geltungsbereich_PL           String?                        @db.NVarChar(255)
  Geltungsbereich_ES           String?                        @db.NVarChar(255)
  Geltungsbereich_HU           String?                        @db.NVarChar(510)
  Conn_Geltungsbereich_Norm    Conn_Geltungsbereich_Norm[]
  Conn_Sprache_Geltungsbereich Conn_Sprache_Geltungsbereich[]
  Kenndaten                    Kenndaten[]
}

model Grundwerkstoff {
  ID                                                      Int                @id(map: "PK_Grundwerkstoff") @default(autoincrement())
  Kurz                                                    String?            @db.VarChar(100)
  hash                                                    String?            @db.VarChar(50)
  Bemerkung                                               String?            @db.VarChar(500)
  EN1090_Kenndaten                                        EN1090_Kenndaten[]
  Kenndaten_Kenndaten_Ref_GrundwerkstoffToGrundwerkstoff  Kenndaten[]        @relation("Kenndaten_Ref_GrundwerkstoffToGrundwerkstoff")
  Kenndaten_Kenndaten_Ref_Grundwerkstoff2ToGrundwerkstoff Kenndaten[]        @relation("Kenndaten_Ref_Grundwerkstoff2ToGrundwerkstoff")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Historie {
  ID        Int       @default(autoincrement())
  benutzer  String?   @db.VarChar(50)
  typ       String?   @db.VarChar(50)
  logzeit   DateTime? @db.DateTime
  bemerkung String?   @db.VarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Historie_Aktion {
  id            Int       @default(autoincrement())
  suchParameter String?   @db.NVarChar(Max)
  zeitstempel   DateTime? @db.DateTime
  benutzer      String?   @db.NVarChar(50)
  Ref_Firma     Int?
  CertTyp       String?   @db.NVarChar(20)
  userHash      String?   @db.NVarChar(50)

  @@ignore
}

model ISO17660_Ausstellungsort {
  ID      Int     @id(map: "PK_ISO17660_Ausstellungsort") @default(autoincrement())
  Text_DE String? @db.NVarChar(100)
  Text_EN String? @db.NVarChar(100)
  Text_IT String? @db.NVarChar(100)
  Text_FR String? @db.NVarChar(100)
  Text_PL String? @db.NVarChar(100)
  Text_HU String? @db.NVarChar(100)
  Ref_ENW Int?
}

model ISO17660_Bildnummer {
  ID              Int     @id(map: "PK_ISO17660_Bildnummer") @default(autoincrement())
  Ref_Normversion Int     @db.SmallInt
  Bildnummern     String? @db.NVarChar(50)
}

model ISO17660_Conn_CERT_Schweissverfahren {
  ID                    Int  @id(map: "PK_ISO17660_Conn_CERT_Schweissverfahren") @default(autoincrement())
  Ref_Schweissverfahren Int?
  Ref_ISO17660_CERT     Int?
  ENW                   ENW? @relation(fields: [Ref_ISO17660_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ISO17660_Conn_CERT_Schweissverfahren_ISO17660_CERT1")
}

model ISO17660_Conn_CERT_Verbindungsart {
  ID                          Int  @id(map: "PK_ISO17660_Conn_CERT_Verbindungsart") @default(autoincrement())
  Ref_ISO17660_Verbindungsart Int?
  Ref_ISO17660_CERT           Int?
  ENW                         ENW? @relation(fields: [Ref_ISO17660_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ISO17660_Conn_CERT_Verbindungsart_ISO17660_CERT1")
}

model ISO17660_Conn_CERT_WSG {
  ID                Int  @id(map: "PK_ISO17660_Conn_CERT_WSG") @default(autoincrement())
  Ref_ISO17660_WSG  Int?
  Ref_ISO17660_CERT Int?
  ENW               ENW? @relation(fields: [Ref_ISO17660_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ISO17660_Conn_CERT_WSG_ISO17660_CERT1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ISO17660_Conn_Norm_Verbindungsart {
  ID                 Int @default(autoincrement())
  Ref_Norm           Int
  Ref_Verbindungsart Int

  @@ignore
}

model ISO17660_Conn_Verbindungsart_Bild {
  ID                                    Int @id(map: "PK_ISO17660_Conn_Verbindungsart_Bild") @default(autoincrement())
  Ref_ISO17660_Conn_CERT_Verbindungsart Int
  Ref_ISO17660_Bildnummer               Int
}

model ISO17660_Normversion {
  ID                   Int                    @id(map: "PK_ISO17660_Normversion") @db.SmallInt
  Ref_Norm             Int
  Beginn               DateTime?              @db.Date
  Ende                 DateTime?              @db.Date
  Beschreibung         String?                @db.NVarChar(50)
  Bezeichnung_DE       String?                @db.NVarChar(50)
  Bezeichnung_EN       String?                @db.NVarChar(50)
  Bezeichnung_FR       String?                @db.NVarChar(50)
  ISO17660_ZusatzDaten ISO17660_ZusatzDaten[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ISO17660_Verbindungsart {
  ID            Int     @default(autoincrement())
  Bezeichnung   String? @db.NVarChar(100)
  Art_DE        String? @db.NVarChar(100)
  ArtAusgabe_DE String? @db.NVarChar(100)
  Art_EN        String? @db.NVarChar(100)
  ArtAusgabe_EN String? @db.NVarChar(100)
  Art_FR        String? @db.NVarChar(100)
  ArtAusgabe_FR String? @db.NVarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ISO17660_ZusatzDaten {
  Ref_ENW              Int
  NormTeil             Int                  @default(2, map: "DF_ISO17660_ZusatzDaten_NormTeil") @db.SmallInt
  Erstellt_am          DateTime?            @db.SmallDateTime
  Erstellt_von         Int?
  ISO17660_Normversion ISO17660_Normversion @relation(fields: [NormTeil], references: [ID], onUpdate: NoAction, map: "FK_ISO17660_ZusatzDaten_ISO17660_Normversion")

  @@ignore
}

model ISO3834_Anwendungsgebiet {
  ID               Int     @id(map: "PK_ISO3834_Anwendungsgebiet") @default(autoincrement())
  Ref_ISO3834_CERT Int?
  Ref_Sprache      Int?
  row              Int?
  Anwendungsgebiet String?
}

model ISO3834_Auditor {
  ID                Int     @id(map: "PK_ISO3834_Auditor") @default(autoincrement())
  Nachname          String? @db.NVarChar(200)
  Vorname           String? @db.NVarChar(200)
  Ref_Titel         Int?
  Ref_A_Stelle      Int?
  ID_extern_Auditor String? @db.VarChar(20)
}

model ISO3834_Ausstellungsort {
  ID      Int     @id(map: "PK_ISO3834_Ausstellungsort") @default(autoincrement())
  Text_DE String? @db.NVarChar(100)
  Text_EN String? @db.NVarChar(100)
  Text_IT String? @db.NVarChar(100)
  Text_FR String? @db.NVarChar(100)
  Text_PL String? @db.NVarChar(100)
  Text_HU String? @db.NVarChar(200)
}

model ISO3834_Bemerkungen {
  ID               Int     @id(map: "PK_ISO3834_Bemerkungen") @default(autoincrement())
  Ref_ISO3834_CERT Int?
  row              Int?
  Bemerkung        String?
  Ref_Sprache      Int?
}

model ISO3834_CERT {
  ID                          Int                     @id(map: "PK_ISO3834_CERT") @default(autoincrement())
  Nummer                      String?                 @db.NVarChar(50)
  Jahr                        Int?
  OwnNumber                   String?                 @db.NVarChar(100)
  Ref_ISO3834_Klasse          Int?
  Ref_ISO3834_Version         Int?
  Ref_A_Stelle                Int?
  Ref_Firma                   Int?
  Ref_Firma2                  Int?
  Ref_ISO3834_Auditor         Int?
  Ref_ISO3834_Ausstellungsort Int?
  Ref_Mutter                  Int?
  Ref_Sprache                 Int?
  ausgestellt_am              DateTime?               @db.Date
  gueltig_von                 DateTime?               @db.Date
  gueltig_bis                 DateTime?               @db.Date
  Logo                        String?                 @db.NVarChar(100)
  QRCode                      String?
  aktiv                       Boolean?
  createDate                  DateTime?               @db.DateTime
  createUser                  String?                 @db.NVarChar(50)
  free_cert                   Boolean?
  ISO3834_Conn_CERT_WSG       ISO3834_Conn_CERT_WSG[]
}

model ISO3834_Conn_Cert_Person {
  ID               Int      @id(map: "PK_ISO3834_Conn_Cert_Person") @default(autoincrement())
  Ref_ISO3834_CERT Int?
  Ref_Person       Int?
  Ref_Personentyp  Int?
  row              Int?
  extern           Boolean?
  anonymCert       Boolean?
  Ref_Stufe        Int?
}

model ISO3834_Conn_CERT_Schweissverfahren {
  ID                    Int  @id(map: "PK_ISO3834_Conn_CERT_Schweissverfahren") @default(autoincrement())
  Ref_ISO3834_CERT      Int?
  Ref_Schweissverfahren Int?
}

model ISO3834_Conn_CERT_WSG {
  ID               Int           @id(map: "PK_ISO3834_Conn_CERT_WSG") @default(autoincrement())
  Ref_ISO3834_WSG  Int?
  Ref_ISO3834_CERT Int?
  ISO3834_CERT     ISO3834_CERT? @relation(fields: [Ref_ISO3834_CERT], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ISO3834_Conn_CERT_WSG_ISO3834_CERT1")
}

model ISO3834_Klasse {
  ID     Int     @id(map: "PK_ISO3834_Klasse") @default(autoincrement())
  Klasse String? @db.NChar(10)
}

model ISO3834_Status {
  ID           Int     @id(map: "PK_ISO3834_Status")
  Status_DE    String  @db.NVarChar(50)
  Status_EN    String  @db.NVarChar(50)
  Status_PL    String  @db.NVarChar(50)
  Status_FR    String  @db.NVarChar(50)
  status_class String? @db.NVarChar(50)
  Status_HU    String? @db.NVarChar(100)
}

model ISO3834_Version {
  ID      Int     @id(map: "PK_ISO3834_Version") @default(autoincrement())
  Version String? @db.NVarChar(50)
}

model ISO3834_WSG {
  ID                      Int                       @id(map: "PK_ISO3834_WSG") @default(autoincrement())
  WSG                     String?                   @db.NVarChar(50)
  aktiv                   Boolean?
  usedISO3834             Boolean?
  ZWS_Conn_Zertifikat_WSG ZWS_Conn_Zertifikat_WSG[]
}

model Kenndaten {
  ID                                                                    Int                @id(map: "PK_Kenndaten_neu") @default(autoincrement())
  Ref_Werkstoffgruppe                                                   Int?
  Ref_Werkstoffgruppe2                                                  Int?
  Ref_Grundwerkstoff                                                    Int?
  Ref_Grundwerkstoff2                                                   Int?
  Ref_Schweissverfahren                                                 Int?
  Ref_Mech_Grad                                                         Int?
  Ref_Schweissverfahren2                                                Int?
  Ref_Mech_Grad2                                                        Int?
  Ref_ENW                                                               Int
  tmin                                                                  Float?
  tmax                                                                  Float?
  dmin                                                                  Float?
  dmax                                                                  Float?
  Bemerkung                                                             String?            @db.VarChar(255)
  Ref_Geltungsbereich                                                   Int
  Bemerkung_DE                                                          String?            @db.NVarChar(500)
  Bemerkung_EN                                                          String?            @db.NVarChar(500)
  Bemerkung_FR                                                          String?            @db.NVarChar(500)
  Bemerkung_IT                                                          String?            @db.NVarChar(500)
  Bemerkung_PL                                                          String?            @db.NVarChar(500)
  Bemerkung_ES                                                          String?            @db.NVarChar(500)
  Ref_Nahtart                                                           Int?
  Bemerkung_HU                                                          String?
  ENW                                                                   ENW                @relation(fields: [Ref_ENW], references: [ID], onDelete: Cascade, map: "FK_Kenndaten_ENW")
  Geltungsbereich                                                       Geltungsbereich    @relation(fields: [Ref_Geltungsbereich], references: [ID], onUpdate: NoAction, map: "FK_Kenndaten_Geltungsbereich")
  Grundwerkstoff_Kenndaten_Ref_GrundwerkstoffToGrundwerkstoff           Grundwerkstoff?    @relation("Kenndaten_Ref_GrundwerkstoffToGrundwerkstoff", fields: [Ref_Grundwerkstoff], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Grundwerkstoff")
  Grundwerkstoff_Kenndaten_Ref_Grundwerkstoff2ToGrundwerkstoff          Grundwerkstoff?    @relation("Kenndaten_Ref_Grundwerkstoff2ToGrundwerkstoff", fields: [Ref_Grundwerkstoff2], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Grundwerkstoff1")
  Mech_Grad_Kenndaten_Ref_Mech_GradToMech_Grad                          Mech_Grad?         @relation("Kenndaten_Ref_Mech_GradToMech_Grad", fields: [Ref_Mech_Grad], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Mech_Grad")
  Mech_Grad_Kenndaten_Ref_Mech_Grad2ToMech_Grad                         Mech_Grad?         @relation("Kenndaten_Ref_Mech_Grad2ToMech_Grad", fields: [Ref_Mech_Grad2], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Mech_Grad1")
  Nahtart                                                               Nahtart?           @relation(fields: [Ref_Nahtart], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Nahtart")
  Schweissverfahren_Kenndaten_Ref_SchweissverfahrenToSchweissverfahren  Schweissverfahren? @relation("Kenndaten_Ref_SchweissverfahrenToSchweissverfahren", fields: [Ref_Schweissverfahren], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Schweissverfahren")
  Schweissverfahren_Kenndaten_Ref_Schweissverfahren2ToSchweissverfahren Schweissverfahren? @relation("Kenndaten_Ref_Schweissverfahren2ToSchweissverfahren", fields: [Ref_Schweissverfahren2], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Schweissverfahren1")
  Werkstoffgruppe_Kenndaten_Ref_WerkstoffgruppeToWerkstoffgruppe        Werkstoffgruppe?   @relation("Kenndaten_Ref_WerkstoffgruppeToWerkstoffgruppe", fields: [Ref_Werkstoffgruppe], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Werkstoffgruppe")
  Werkstoffgruppe_Kenndaten_Ref_Werkstoffgruppe2ToWerkstoffgruppe       Werkstoffgruppe?   @relation("Kenndaten_Ref_Werkstoffgruppe2ToWerkstoffgruppe", fields: [Ref_Werkstoffgruppe2], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Kenndaten_Werkstoffgruppe1")
}

model Kenndaten_old {
  ID                    Int     @id(map: "PK_Kenndaten") @default(autoincrement())
  Ref_Werkstoffgruppe   Int?
  Ref_Werkstoffgruppe2  Int?
  Ref_Grundwerkstoff    Int?
  Ref_Schweissverfahren Int?
  Ref_ENW               Int
  tmin                  Float?
  tmax                  Float?
  dmin                  Float?
  dmax                  Float?
  Bemerkung             String? @db.VarChar(255)
  Ref_Geltungsbereich   Int
}

model Klasse {
  ID            Int             @id(map: "PK_Klasse") @default(autoincrement())
  Klasse        String?         @db.VarChar(5)
  Bauteilklasse Bauteilklasse[]
  Unterklasse   Unterklasse[]
}

model Kommentar_Typ {
  ID            Int             @id(map: "PK_Kommentar_Typ") @default(autoincrement())
  Typ           String?         @db.VarChar(50)
  Conn_Komm_ENW Conn_Komm_ENW[]
}

model Kommentare {
  ID            Int             @id(map: "PK_Kommentare") @default(autoincrement())
  Kommentar     String?         @db.VarChar(255)
  Ref_Typ       Int?
  Text          String?         @db.VarChar(5000)
  Conn_Komm_ENW Conn_Komm_ENW[]
}

model KontaktDaten {
  ID          Int    @id(map: "PK_KontaktDaten") @default(autoincrement())
  KontaktTyp  Int
  KontaktWert String @db.VarChar(200)
}

model KontaktTypen {
  ID                 Int    @id(map: "PK_KontaktTypen")
  Kontaktbezeichnung String @db.VarChar(100)
}

model Label {
  ID          Int           @id(map: "PK_Label") @default(autoincrement())
  Name        String?       @db.VarChar(50)
  Translation Translation[]
}

model Laendercode {
  LKZ                   String                  @id(map: "PK_Laendercode") @db.NVarChar(5)
  Lang                  String?                 @db.NVarChar(255)
  Lang_DE               String?                 @db.NVarChar(255)
  Lang_EN               String?                 @db.NVarChar(255)
  Lang_FR               String?                 @db.NVarChar(255)
  Lang_IT               String?                 @db.NVarChar(255)
  Lang_PL               String?                 @db.NVarChar(255)
  Lang_ES               String?                 @db.NVarChar(255)
  aktiv                 Boolean?                @default(true, map: "DF_Laendercode_aktiv")
  Lang_HU               String?                 @db.NVarChar(510)
  Conn_Land_Territorium Conn_Land_Territorium[]
  Firma                 Firma[]
}

model Mandantentyp {
  ID             Int        @id(map: "PK_Mandantentyp") @default(autoincrement())
  Mandantentyp   String?    @db.NVarChar(100)
  Bezeichnung_DE String?    @db.NVarChar(200)
  Bezeichnung_EN String?    @db.NVarChar(200)
  Bezeichnung_FR String?    @db.NVarChar(200)
  Bezeichnung_IT String?    @db.NVarChar(200)
  Bezeichnung_PL String?    @db.NVarChar(200)
  Bezeichnung_ES String?    @db.NVarChar(200)
  Bezeichnung_HU String?    @db.NVarChar(400)
  Conn_BMM       Conn_BMM[]
}

model Mech_Grad {
  ID                                            Int                @id(map: "PK_Mech_Grad") @default(autoincrement())
  Mech_Grad                                     String?            @db.VarChar(50)
  Beschreibung                                  String?            @db.VarChar(30)
  Beschreibung_DE                               String?            @db.NVarChar(60)
  Beschreibung_EN                               String?            @db.NVarChar(60)
  Beschreibung_PL                               String?            @db.NVarChar(60)
  Beschreibung_FR                               String?            @db.NVarChar(60)
  Beschreibung_IT                               String?            @db.NVarChar(60)
  Beschreibung_ES                               String?            @db.NVarChar(60)
  Beschreibung_HU                               String?            @db.NVarChar(120)
  EN1090_Kenndaten                              EN1090_Kenndaten[]
  Kenndaten_Kenndaten_Ref_Mech_GradToMech_Grad  Kenndaten[]        @relation("Kenndaten_Ref_Mech_GradToMech_Grad")
  Kenndaten_Kenndaten_Ref_Mech_Grad2ToMech_Grad Kenndaten[]        @relation("Kenndaten_Ref_Mech_Grad2ToMech_Grad")
}

model Module {
  ID                             Int                              @id(map: "PK_Module") @default(autoincrement())
  Modul                          String?                          @db.VarChar(50)
  menuTyp                        Int?                             @db.SmallInt
  aufruf                         String?                          @db.VarChar(50)
  protected                      Boolean?
  rownumber                      Int?
  text_de                        String?                          @db.NVarChar(50)
  text_en                        String?                          @db.NVarChar(50)
  text_pl                        String?                          @db.NVarChar(50)
  text_fr                        String?                          @db.NVarChar(50)
  text_HU                        String?                          @db.NVarChar(100)
  Conn_Anwendung_Module          Conn_Anwendung_Module[]
  Conn_Anwendung_Module_Benutzer Conn_Anwendung_Module_Benutzer[]
  Conn_RAM                       Conn_RAM[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Nachgewiesene_Verfahren {
  ID_Nachweis    Int?
  ID_Prozess     Int?
  WSG            String? @db.NVarChar(50)
  WS             String? @db.NVarChar(50)
  tmin           Float?
  tmax           Float?
  Dmin           Float?
  Dmax           Float?
  Bemerkung      String? @db.NVarChar(50)
  Einkaufssperre Boolean

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Nachgewiesene_Verfahren_Ori {
  ID_Nachweis    Int?
  ID_Prozess     Int?
  WSG            String? @db.NVarChar(50)
  WS             String? @db.NVarChar(50)
  tmin           Float?
  tmax           Float?
  Dmin           Float?
  Dmax           Float?
  Bemerkung      String? @db.NVarChar(50)
  Einkaufssperre Boolean

  @@ignore
}

model Nachweis_Art {
  ID       Int        @id(map: "PK_Nachweis_Art") @default(autoincrement())
  Kurz     String?    @db.VarChar(5)
  Lang     String?    @db.VarChar(50)
  Berichte Berichte[]
  ENW      ENW[]
}

model Nachweisbezeichnung {
  ID          Int     @id(map: "PK_Nachweisbezeichnung") @default(autoincrement())
  Bezeichnung String? @db.VarChar(100)
  ENW         ENW[]
}

model Nahtart {
  ID         Int         @id(map: "PK_Nahtart") @default(autoincrement())
  Kurz       String?     @db.NVarChar(50)
  Nahtart_de String?     @db.NVarChar(50)
  Nahtart_en String?     @db.NVarChar(50)
  Nahtart_it String?     @db.NVarChar(50)
  Nahtart_fr String?     @db.NVarChar(50)
  Nahtart_pl String?     @db.NVarChar(50)
  Nahtart_es String?     @db.NVarChar(50)
  Nahtart_HU String?     @db.NVarChar(100)
  Kenndaten  Kenndaten[]
}

model Norm {
  ID                          Int                           @id(map: "PK_Norm_1") @default(autoincrement())
  Norm                        String?                       @db.VarChar(50)
  Beschreibung                String?                       @db.VarChar(50)
  DE                          String?                       @db.NVarChar(100)
  EN                          String?                       @db.NVarChar(100)
  PL                          String?                       @db.NVarChar(100)
  IT                          String?                       @db.NVarChar(100)
  FR                          String?                       @db.NVarChar(100)
  ES                          String?                       @db.NVarChar(100)
  Conn_AnonymRegister         Conn_AnonymRegister[]
  Conn_Auditor_Norm_A_Stelle  Conn_Auditor_Norm_A_Stelle[]
  Conn_Geltungsbereich_Norm   Conn_Geltungsbereich_Norm[]
  Conn_Norm_Firma             Conn_Norm_Firma[]
  Conn_Norm_Qualifikation     Conn_Norm_Qualifikation[]
  Conn_Norm_Schweissverfahren Conn_Norm_Schweissverfahren[]
  Conn_Norm_Sprache           Conn_Norm_Sprache[]
  Conn_Norm_Werkstoffgruppe   Conn_Norm_Werkstoffgruppe[]
  Conn_Sprache_Personentyp    Conn_Sprache_Personentyp[]
  Conn_Stufe_Norm             Conn_Stufe_Norm[]
  EN1090_CERT                 EN1090_CERT[]
  EN1090_Kenndaten            EN1090_Kenndaten[]
  ENW                         ENW[]
  Textbaustein                Textbaustein[]
  Unterklasse                 Unterklasse[]
  Werkstoffgruppe             Werkstoffgruppe[]
}

model opengeodb {
  LKZ                        String? @db.VarChar(8000)
  Land                       String? @db.VarChar(8000)
  Regierungsbezirk           String? @db.VarChar(8000)
  Landkreis                  String? @db.VarChar(8000)
  Verwaltungszusammenschluss String? @db.VarChar(8000)
  Ort                        String? @db.VarChar(8000)
  Laenge                     Float?
  Breite                     Float?
  PLZ                        String? @db.VarChar(8000)
  ID                         Int     @id(map: "PK_opengeodb") @default(autoincrement())
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model OriNachweise {
  Z_hler                       Int       @map("Zähler")
  Datum_nderung                DateTime? @map("DatumÄnderung") @db.SmallDateTime
  ID_AS                        Int?
  Eignungsnachweisart          Int?
  Klasse_grob                  String?   @db.NVarChar(3)
  Norm                         String?   @db.NVarChar(10)
  Nummer                       String?   @db.NVarChar(3)
  Art                          String?   @db.NVarChar(2)
  Jahr                         String?   @db.NVarChar(2)
  Eignungsbescheinigungsnummer String?   @db.NVarChar(50)
  Geltungsdauer                DateTime? @db.SmallDateTime
  Ausstellungsdatum            DateTime? @db.SmallDateTime
  Nation                       String?   @db.NVarChar(20)
  FirmaZ1                      String?   @db.NVarChar(50)
  FirmaZ2                      String?   @db.NVarChar(50)
  FirmaZ3                      String?   @db.NVarChar(50)
  Stra_e                       String?   @map("Straße") @db.NVarChar(50)
  LKZ                          String?   @db.NVarChar(3)
  PLZ                          String?   @db.NVarChar(10)
  Ort                          String?   @db.NVarChar(50)
  Anschrift                    String?   @db.NText
  Anschrift_Register           String?   @db.NText
  TelefonF                     String?   @db.NVarChar(20)
  FaxF                         String?   @db.NVarChar(20)
  E_mail                       String?   @map("E-mail") @db.NVarChar(50)
  Internet                     String?   @db.NVarChar(50)
  KundenNr                     String?   @db.NVarChar(10)
  AnredeSA                     String?   @db.NVarChar(50)
  Anrede_BriefSA               String?   @db.NVarChar(50)
  NameSA                       String?   @db.NVarChar(20)
  VornameSA                    String?   @db.NVarChar(20)
  GeburtsdatumSA               DateTime? @db.SmallDateTime
  AusbildungSA                 String?   @db.NVarChar(50)
  Vertreter                    String?   @db.NVarChar(50)
  AnredeV                      String?   @db.NVarChar(50)
  Anrede_BriefV                String?   @db.NVarChar(50)
  NameV                        String?   @db.NVarChar(20)
  VornameV                     String?   @db.NVarChar(20)
  GeburtsdatumV                DateTime? @db.SmallDateTime
  AusbildungV                  String?   @db.NVarChar(50)
  Vertreter1                   String?   @db.NVarChar(50)
  AnredeV1                     String?   @db.NVarChar(20)
  Anrede_BriefV1               String?   @db.NVarChar(50)
  NameV1                       String?   @db.NVarChar(20)
  VornameV1                    String?   @db.NVarChar(20)
  GeburtsdatumV1               DateTime? @db.SmallDateTime
  AusbildungV1                 String?   @db.NVarChar(50)
  Vertreter2                   String?   @db.NVarChar(50)
  AnredeV2                     String?   @db.NVarChar(20)
  Anrede_BriefV2               String?   @db.NVarChar(50)
  NameV2                       String?   @db.NVarChar(20)
  VornameV2                    String?   @db.NVarChar(20)
  GeburtsdatumV2               DateTime? @db.SmallDateTime
  AusbildungV2                 String?   @db.NVarChar(50)
  AnwendungsgebietZ1           String?   @db.NVarChar(150)
  AnwendungsgebietZ2           String?   @db.NVarChar(150)
  AnwendungsgebietZ3           String?   @db.NVarChar(150)
  AnwendungsgebietZ4           String?   @db.NVarChar(150)
  Erstellt_am                  DateTime? @db.SmallDateTime
  Ge_ndert_am                  DateTime? @map("Geändert_am") @db.SmallDateTime
  Schl_ssel2                   String?   @map("Schlüssel2") @db.NVarChar(50)
  Funktion_Abteilung           String?   @db.NVarChar(50)
  OwnerSLV                     Boolean
  Einkaufssperre               Boolean

  @@ignore
}

model Person {
  ID                  Int                   @id(map: "PK_Person") @default(autoincrement())
  Nachname            String?               @db.NVarChar(100)
  Vorname             String?               @db.NVarChar(100)
  Ref_Titel           Int?
  Geb_Datum           DateTime?             @db.DateTime
  Ref_Anrede          Int?
  Ref_Qualifikation   Int?
  anonym              Boolean?
  email               String?               @db.NVarChar(100)
  A_Stelle            A_Stelle[]
  Conn_AnonymRegister Conn_AnonymRegister[]
  Conn_EN1090_Person  Conn_EN1090_Person[]
  Conn_ENW_Person     Conn_ENW_Person[]
  Conn_Person_AStelle Conn_Person_AStelle[]
  Conn_Person_Firma   Conn_Person_Firma[]
  Firma               Firma[]
  Anrede_Adresse      Anrede_Adresse?       @relation(fields: [Ref_Anrede], references: [ID], onDelete: NoAction, map: "FK_Person_Anrede_Adresse")
  Qualifikation       Qualifikation?        @relation(fields: [Ref_Qualifikation], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Person_Qualifikation")
  Titel               Titel?                @relation(fields: [Ref_Titel], references: [ID], onDelete: NoAction, map: "FK_Person_Titel")
}

model Personentyp {
  ID                                        Int                                @id(map: "PK_Vertreter") @default(autoincrement())
  Typ                                       String?                            @db.VarChar(50)
  Audit_Audit_Ref_PersonentypToPersonentyp  Audit[]                            @relation("Audit_Ref_PersonentypToPersonentyp")
  Audit_Audit_Ref_TypCoAuditorToPersonentyp Audit[]                            @relation("Audit_Ref_TypCoAuditorToPersonentyp")
  Conn_Auditor_Personentyp                  Conn_Auditor_Personentyp[]
  Conn_EN1090_Person                        Conn_EN1090_Person[]
  Conn_ENW_Person                           Conn_ENW_Person[]
  Conn_Person_Personentyp_A_Stelle          Conn_Person_Personentyp_A_Stelle[]
  Conn_Sprache_Personentyp                  Conn_Sprache_Personentyp[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PersonenVorauswahlNorm {
  ID              Int       @default(autoincrement())
  Ref_PersonenTyp Int
  Ref_AStelle     Int
  Ref_Titel       Int
  Ref_Norm        Int
  Ref_Anrede      Int?
  Nachname        String?   @db.NVarChar(100)
  Vorname         String?   @db.NVarChar(100)
  Geb_Datum       DateTime? @db.Date
  row             Int?
  erstellt_am     DateTime? @db.DateTime
  erstellt_von    String?   @db.NVarChar(50)
  geaendert_am    DateTime? @db.DateTime
  geaendert_von   String?   @db.NVarChar(50)

  @@ignore
}

model Profil_Beschreibung {
  ID                             Int                              @id(map: "PK_Profil_Beschreibung") @default(autoincrement())
  Beschreibung                   String?                          @db.Text
  Beschreibung_DE                String?                          @db.Text
  Beschreibung_EN                String?                          @db.Text
  Beschreibung_FR                String?                          @db.Text
  Beschreibung_IT                String?                          @db.Text
  Beschreibung_PL                String?                          @db.Text
  Beschreibung_ES                String?                          @db.Text
  Beschreibung_HU                String?                          @db.NText
  Conn_Profil_Beschreibung_Firma Conn_Profil_Beschreibung_Firma[]
}

model Profil_Leistung {
  ID                         Int                          @id(map: "PK_Profil_Leistung") @default(autoincrement())
  Leistung                   String?                      @db.Text
  Leistung_DE                String?                      @db.Text
  Leistung_EN                String?                      @db.Text
  Leistung_FR                String?                      @db.Text
  Leistung_IT                String?                      @db.Text
  Leistung_PL                String?                      @db.Text
  Leistung_ES                String?                      @db.Text
  Leistung_HU                String?                      @db.NText
  Conn_Profil_Leistung_Firma Conn_Profil_Leistung_Firma[]
}

model Profil_Personal {
  ID                  Int    @id(map: "PK_Profil_Personal") @default(autoincrement())
  Ref_Firma           Int?
  total               Int?
  design              Int?
  production          Int?
  maintenance         Int?
  purchase_and_supply Int?   @map("purchase and supply")
  Firma               Firma? @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Profil_Personal_Firma")
}

model Profil_Produkt {
  ID                        Int                         @id(map: "PK_Profil_Produkt") @default(autoincrement())
  Produkt                   String?                     @db.VarChar(256)
  Produkt_DE                String?                     @db.NVarChar(500)
  Produkt_EN                String?                     @db.NVarChar(500)
  Produkt_FR                String?                     @db.NVarChar(500)
  Produkt_IT                String?                     @db.NVarChar(500)
  Produkt_PL                String?                     @db.NVarChar(500)
  Produkt_ES                String?                     @db.NVarChar(500)
  Produkt_HU                String?
  Conn_Profil_Produkt_Firma Conn_Profil_Produkt_Firma[]
}

model Qualifikation {
  ID                         Int                          @id(map: "PK_Qualifikation") @default(autoincrement())
  Qualifikation              String?                      @db.NVarChar(100)
  Qualifikation_DE           String?                      @db.NVarChar(100)
  Qualifikation_EN           String?                      @db.NVarChar(100)
  Qualifikation_FR           String?                      @db.NVarChar(100)
  Qualifikation_IT           String?                      @db.NVarChar(100)
  Qualifikation_PL           String?                      @db.NVarChar(100)
  Qualifikation_ES           String?                      @db.NVarChar(100)
  Qualifikation_HU           String?                      @db.NVarChar(200)
  Conn_Auditor_Qualifikation Conn_Auditor_Qualifikation[]
  Conn_Norm_Qualifikation    Conn_Norm_Qualifikation[]
  Conn_Sprache_Qualifikation Conn_Sprache_Qualifikation[]
  Person                     Person[]
}

model QualityMapping {
  ID                 Int     @id(map: "PK_QualityMapping") @default(autoincrement())
  Qualifikation      String? @db.NVarChar(255)
  neue_Qualifikation String? @map("neue Qualifikation") @db.NVarChar(255)
}

model RID_Firma {
  ID             Int              @id(map: "PK_RID_Firma") @default(autoincrement())
  Firma          String?          @db.NVarChar(400)
  aktiv          Boolean?
  Ref_A_Stelle   Int?
  RID_Zertifikat RID_Zertifikat[]
}

model RID_Pruefstelle {
  ID             Int              @id(map: "PK_RID_Pruefstelle") @default(autoincrement())
  Pruefstelle    String?          @db.NVarChar(400)
  aktiv          Boolean?
  Ref_A_Stelle   Int?
  RID_Zertifikat RID_Zertifikat[]
}

model RID_Verfahrenspruefung {
  ID                 Int              @id(map: "PK_RID_Verfahrenspruefung") @default(autoincrement())
  Verfahrenspruefung String?          @db.NVarChar(400)
  Datei              String?          @db.NVarChar(400)
  aktiv              Boolean?
  Ref_A_Stelle       Int?
  RID_Zertifikat     RID_Zertifikat[]
}

model RID_Zertifikat {
  ID                         Int                     @id(map: "PK_RID_Zertifikat") @default(autoincrement())
  Aktenzeichen               String?                 @db.NVarChar(400)
  Ref_RID_Firma              Int?
  Ref_RID_Pruefstelle        Int?
  Ref_RID_Verfahrenspruefung Int?
  Dauer                      DateTime?               @db.DateTime
  Datei                      String?                 @db.NVarChar(400)
  aktiv                      Boolean?
  Ref_A_Stelle               Int?
  RID_Firma                  RID_Firma?              @relation(fields: [Ref_RID_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_RID_Zertifikat_RID_Firma")
  RID_Pruefstelle            RID_Pruefstelle?        @relation(fields: [Ref_RID_Pruefstelle], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_RID_Zertifikat_RID_Pruefstelle")
  RID_Verfahrenspruefung     RID_Verfahrenspruefung? @relation(fields: [Ref_RID_Verfahrenspruefung], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_RID_Zertifikat_RID_Verfahrenspruefung")
}

model Rohr_Blech {
  ID  Int     @id(map: "PK_Rohr_Blech") @default(autoincrement())
  Typ String? @db.VarChar(1)
}

model Rolle {
  ID                  Int                   @id(map: "PK_Rolle") @default(autoincrement())
  Rolle               String?               @db.NVarChar(100)
  Beschreibung        String?               @db.NVarChar(200)
  Conn_RAM            Conn_RAM[]
  Conn_Rolle_Conn_BMM Conn_Rolle_Conn_BMM[]
}

model Schweissverfahren {
  ID                                                            Int                                   @id(map: "PK_Schweissverfahren_neu") @default(autoincrement())
  Bezeichnung                                                   String?                               @db.NVarChar(80)
  Nummer                                                        String?                               @db.NVarChar(7)
  Kurzzeichen                                                   String?                               @db.NVarChar(10)
  Bezeichnung_DE                                                String?                               @db.NVarChar(200)
  Bezeichnung_EN                                                String?                               @db.NVarChar(200)
  Bezeichnung_PL                                                String?                               @db.NVarChar(200)
  Bezeichnung_FR                                                String?                               @db.NVarChar(200)
  Bezeichnung_IT                                                String?                               @db.NVarChar(200)
  Bezeichnung_ES                                                String?                               @db.NVarChar(200)
  Bezeichnung_HU                                                String?                               @db.NVarChar(400)
  Conn_Norm_Schweissverfahren                                   Conn_Norm_Schweissverfahren[]
  EN1090_Kenndaten                                              EN1090_Kenndaten[]
  Kenndaten_Kenndaten_Ref_SchweissverfahrenToSchweissverfahren  Kenndaten[]                           @relation("Kenndaten_Ref_SchweissverfahrenToSchweissverfahren")
  Kenndaten_Kenndaten_Ref_Schweissverfahren2ToSchweissverfahren Kenndaten[]                           @relation("Kenndaten_Ref_Schweissverfahren2ToSchweissverfahren")
  ZWS_Conn_Zertifikat_Schweissprozess                           ZWS_Conn_Zertifikat_Schweissprozess[]
}

model Schweissverfahren_old {
  ID          Int     @id(map: "PK_Schweissverfahren") @default(autoincrement())
  Bezeichnung String? @db.NVarChar(80)
  Nummer      String? @db.NVarChar(7)
  Kurzzeichen String? @db.NVarChar(10)
}

model Selbstauskunft_Antrag {
  ID                                                         Int                       @id(map: "PK_ENW_Selbstauskunft_Antrag") @default(autoincrement())
  Ref_Selbstauskunft_Daten                                   Int?
  Ref_A_Stelle                                               Int
  Ref_Beantragender                                          Int
  datum_antrag                                               DateTime                  @default(now(), map: "DF_ENW_Selbstauskunft_Antrag_datum_antrag") @db.DateTime
  auditor_wunsch                                             String                    @default("", map: "DF_ENW_Selbstauskunft_Antrag_auditor_wunsch") @db.VarChar(300)
  art                                                        Int
  bearbeitet_am                                              DateTime?                 @db.DateTime
  bearbeiter_von                                             Int?
  Ref_Firma_Selbst                                           Int?
  aktiv                                                      Boolean?
  datum_start                                                DateTime?                 @db.Date
  AntragMutter                                               Int?
  AntragAktiv                                                Boolean?
  AntragGesperrt                                             Boolean?
  AntragGesperrtDatum                                        DateTime?                 @db.Date
  AntragFinalFile                                            String?                   @db.NVarChar(200)
  A_Stelle                                                   A_Stelle                  @relation(fields: [Ref_A_Stelle], references: [ID], onUpdate: NoAction, map: "FK_ENW_Selbstauskunft_Antrag_A_Stelle")
  Benutzer_Selbstauskunft_Antrag_Ref_BeantragenderToBenutzer Benutzer                  @relation("Selbstauskunft_Antrag_Ref_BeantragenderToBenutzer", fields: [Ref_Beantragender], references: [ID], onUpdate: NoAction, map: "FK_ENW_Selbstauskunft_Antrag_Benutzer")
  Benutzer_Selbstauskunft_Antrag_bearbeiter_vonToBenutzer    Benutzer?                 @relation("Selbstauskunft_Antrag_bearbeiter_vonToBenutzer", fields: [bearbeiter_von], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENW_Selbstauskunft_Antrag_Benutzer1")
  Selbstauskunft_Antrag_Art                                  Selbstauskunft_Antrag_Art @relation(fields: [art], references: [ID], onUpdate: NoAction, map: "FK_ENW_Selbstauskunft_Antrag_ENW_Selbstauskunft_Antrag_Art")
}

model Selbstauskunft_Antrag_Art {
  ID                    Int                     @id(map: "PK_ENW_Selbstauskunft_Antrag_Art") @default(autoincrement())
  Beschreibung          String?                 @db.VarChar(250)
  Beschreibung_de       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_de") @db.VarChar(250)
  Beschreibung_en       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_en") @db.VarChar(250)
  Beschreibung_fr       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_fr") @db.VarChar(250)
  Beschreibung_it       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_it") @db.VarChar(250)
  Beschreibung_es       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_es") @db.VarChar(250)
  Beschreibung_pl       String                  @default("", map: "DF_ENW_Selbstauskunft_Antrag_Art_Beschreibung_pl") @db.VarChar(250)
  Beschreibung_HU       String?                 @db.NVarChar(250)
  Selbstauskunft_Antrag Selbstauskunft_Antrag[]
}

model Selbstauskunft_Conn_Antrag_Taetigkeitsbereich {
  ID                     Int  @id(map: "PK_Selbstauskunft_Conn_Antrag_Taetigkeitsbereich") @default(autoincrement())
  Ref_Taetigkeitsbereich Int?
  Ref_SA_Antrag          Int?
}

model Selbstauskunft_Daten {
  ID                      Int     @id(map: "PK_Selbstauskunft_Daten") @default(autoincrement())
  Ref_Norm                Int?
  Ref_Taetigkeitsbereiche String? @db.NVarChar(50)
  Ref_Unterklasse         Int?
}

model Sprache {
  ID                           Int                            @id(map: "PK_Sprache") @default(autoincrement())
  Sprache                      String?                        @db.VarChar(50)
  kurz                         String?                        @db.VarChar(10)
  Benutzer                     Benutzer[]
  Conn_AG_ENW                  Conn_AG_ENW[]
  Conn_ENW_Sprache             Conn_ENW_Sprache[]
  Conn_Norm_Sprache            Conn_Norm_Sprache[]
  Conn_Sprache_Anrede_Adresse  Conn_Sprache_Anrede_Adresse[]
  Conn_Sprache_Bauteilklasse   Conn_Sprache_Bauteilklasse[]
  Conn_Sprache_Bundesland      Conn_Sprache_Bundesland[]
  Conn_Sprache_Geltungsbereich Conn_Sprache_Geltungsbereich[]
  Conn_Sprache_Laendercode     Conn_Sprache_Laendercode[]
  Conn_Sprache_Personentyp     Conn_Sprache_Personentyp[]
  Conn_Sprache_Qualifikation   Conn_Sprache_Qualifikation[]
  Conn_Sprache_Titel           Conn_Sprache_Titel[]
  EN1090_Bemerkung             EN1090_Bemerkung[]
  EN1090_CERT                  EN1090_CERT[]
  ENW                          ENW[]
  Translation                  Translation[]
}

model Status {
  ID         Int          @id(map: "PK_Status") @default(autoincrement())
  Status_DE  String?      @db.NVarChar(100)
  Status_EN  String?      @db.NVarChar(100)
  Status_FR  String?      @db.NVarChar(100)
  Status_IT  String?      @db.NVarChar(100)
  Status_PL  String?      @db.NVarChar(100)
  Status_ES  String?      @db.NVarChar(100)
  Status_HU  String?      @db.NVarChar(200)
  ENW_Status ENW_Status[]
}

model Stufe {
  ID              Int               @id(map: "PK__Stufe__3214EC2719BE0DFA") @default(autoincrement())
  Stufe           String?           @db.NVarChar(100)
  Stufe_DE        String?           @db.NVarChar(100)
  Stufe_EN        String?           @db.NVarChar(100)
  Stufe_FR        String?           @db.NVarChar(100)
  Stufe_IT        String?           @db.NVarChar(100)
  Stufe_PL        String?           @db.NVarChar(100)
  Stufe_ES        String?           @db.NVarChar(100)
  Stufe_HU        String?           @db.NVarChar(200)
  Conn_ENW_Person Conn_ENW_Person[]
  Conn_Stufe_Norm Conn_Stufe_Norm[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B616AB24B3B") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Table_LKZ_Kontinent {
  name_de   String? @db.NVarChar(50)
  name_en   String? @db.NVarChar(50)
  kontinent String? @db.NVarChar(30)
  lkz       String? @db.NVarChar(2)

  @@ignore
}

model Taetigkeitsbereich {
  ID                 Int     @id(map: "PK_Taetigkeitsbereich") @default(autoincrement())
  Taetigkeitsbereich String? @db.VarChar(50)
}

model Taetigkeitsbereiche {
  ID                                     Int                                      @id(map: "PK_Taetigkeitsbereiche") @default(autoincrement())
  Kurz                                   String?                                  @db.NVarChar(5)
  Lang_DE                                String?                                  @db.NVarChar(100)
  Lang_EN                                String?                                  @db.NVarChar(100)
  Lang_FR                                String?                                  @db.NVarChar(100)
  Lang_IT                                String?                                  @db.NVarChar(100)
  Lang_PL                                String?                                  @db.NVarChar(100)
  Lang_ES                                String?                                  @db.NVarChar(100)
  Beschreibung_DE                        String?                                  @db.NVarChar(300)
  Beschreibung_EN                        String?                                  @db.NVarChar(300)
  Beschreibung_FR                        String?                                  @db.NVarChar(300)
  Beschreibung_IT                        String?                                  @db.NVarChar(300)
  Beschreibung_PL                        String?                                  @db.NVarChar(300)
  Beschreibung_ES                        String?                                  @db.NVarChar(300)
  Lang_HU                                String?                                  @db.NVarChar(200)
  Beschreibung_HU                        String?                                  @db.NVarChar(600)
  Conn_ENW_Taetigkeitsbereiche_Werkstatt Conn_ENW_Taetigkeitsbereiche_Werkstatt[]
  Conn_FT                                Conn_FT[]
  Conn_Taetigkeitsbereiche_Bauteilklasse Conn_Taetigkeitsbereiche_Bauteilklasse[]
}

model tblArtenMapping {
  ID      Int     @id(map: "PK_tblArtenMapping") @default(autoincrement())
  alteArt String? @db.NVarChar(50)
  neueArt String? @db.NVarChar(50)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tblGWSMapping {
  ID             Int?
  Kurz           String? @db.VarChar(50)
  EN_Bezeichnung String? @db.VarChar(50)
  Bemerkung      String? @db.VarChar(50)
  WSG1           String? @db.VarChar(10)
  WSG2           String? @db.VarChar(10)
  WSG3           String? @db.VarChar(10)
  WSG4           String? @db.VarChar(10)
  WSG5           String? @db.VarChar(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tblProzesseMapping {
  ID          Int?
  Nummer      String? @db.VarChar(10)
  Kurzzeichen String? @db.VarChar(10)
  Nummer_Neu  String? @db.VarChar(10)
  Kurz_neu    String? @db.VarChar(10)
  Mechgrad    String? @db.VarChar(1)
  Nummer_Neu1 String? @db.VarChar(10)
  Kurz_neu1   String? @db.VarChar(10)
  Mechgrad1   String? @db.VarChar(1)
  Kombi       String? @db.VarChar(10)
  NewPID      Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tblWSGMapping {
  WSG       String? @db.NVarChar(100)
  WSGK11    String? @db.NVarChar(5)
  WSGK12    String? @db.NVarChar(5)
  WSGK21    String? @db.NVarChar(5)
  WSGK22    String? @db.NVarChar(5)
  WSGK31    String? @db.NVarChar(5)
  WSGK32    String? @db.NVarChar(5)
  WSGK41    String? @db.NVarChar(5)
  WSGK42    String? @db.NVarChar(5)
  WSGK51    String? @db.NVarChar(5)
  WSGK52    String? @db.NVarChar(5)
  WSGK61    String? @db.NVarChar(5)
  WSGK62    String? @db.NVarChar(5)
  WSGK71    String? @db.NVarChar(5)
  WSGK72    String? @db.NVarChar(5)
  WSGK81    String? @db.NVarChar(5)
  WSGK82    String? @db.NVarChar(5)
  WSGK91    String? @db.NVarChar(5)
  WSGK92    String? @db.NVarChar(5)
  Bemerkung String? @db.NVarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempPerson {
  Anrede_Adresse String?   @db.NVarChar(50)
  Anrede_Brief   String?   @db.NVarChar(50)
  Nachname       String?   @db.NVarChar(20)
  Vorname        String?   @db.NVarChar(20)
  Geb_Datum      DateTime? @db.SmallDateTime
  Qualifikation  String?   @db.NVarChar(50)
  ID             Int       @default(autoincrement())

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TempPerson1 {
  RefAnrede     Int?
  Nachname      String?   @db.NVarChar(20)
  Vorname       String?   @db.NVarChar(20)
  Geb_Datum     DateTime? @db.SmallDateTime
  Qualifikation String?   @db.NVarChar(50)
  ID            Int
  RefTitel      Int?

  @@ignore
}

model Territorium {
  ID                    Int                     @id(map: "PK_Territorium") @default(autoincrement())
  Ref_Typ               Int
  Kurz                  String?                 @db.NVarChar(3)
  Name_DE               String                  @db.VarChar(50)
  Name_EN               String?                 @db.NVarChar(50)
  Name_FR               String?                 @db.NVarChar(50)
  Name_IT               String?                 @db.NVarChar(50)
  Name_PL               String?                 @db.NVarChar(50)
  Name_ES               String?                 @db.NVarChar(50)
  Name_HU               String?                 @db.NVarChar(50)
  Conn_Land_Territorium Conn_Land_Territorium[]
  Territorium_Typ       Territorium_Typ         @relation(fields: [Ref_Typ], references: [ID], onUpdate: NoAction, map: "FK_Territorium_Territorium_Typ")
}

model Territorium_Typ {
  ID          Int           @id(map: "PK_Territorium_Typ") @default(autoincrement())
  Name_DE     String?       @db.VarChar(50)
  Name_EN     String?       @db.NVarChar(50)
  Name_FR     String?       @db.NVarChar(50)
  Name_IT     String?       @db.NVarChar(50)
  Name_PL     String?       @db.NVarChar(50)
  Name_ES     String?       @db.NVarChar(50)
  Name_HU     String?       @db.NVarChar(50)
  Territorium Territorium[]
}

model Textbaustein {
  ID              Int          @id(map: "PK_Textbaustein") @default(autoincrement())
  Textbaustein    String?      @db.VarChar(255)
  Ref_Bausteintyp Int?
  Ref_Norm        Int?
  Bausteintyp     Bausteintyp? @relation(fields: [Ref_Bausteintyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Textbaustein_Bausteintyp")
  Norm            Norm?        @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Textbaustein_Norm")
}

model Titel {
  ID                 Int                  @id(map: "PK_Titel") @default(autoincrement())
  Titel              String?              @db.VarChar(30)
  Titel_DE           String?              @db.NVarChar(50)
  Titel_EN           String?              @db.NVarChar(50)
  Titel_FR           String?              @db.NVarChar(50)
  Titel_IT           String?              @db.NVarChar(50)
  Titel_PL           String?              @db.NVarChar(50)
  Titel_ES           String?              @db.NVarChar(50)
  Titel_HU           String?              @db.NVarChar(100)
  Auditor            Auditor[]
  Conn_Sprache_Titel Conn_Sprache_Titel[]
  Person             Person[]
}

model Translation {
  ID          Int      @id(map: "PK_Translation") @default(autoincrement())
  Ref_Label   Int?
  Ref_Sprache Int?
  Ref_File    Int?
  Text        String?  @db.VarChar(50)
  File        File?    @relation(fields: [Ref_File], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Translation_File")
  Label       Label?   @relation(fields: [Ref_Label], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Translation_Label")
  Sprache     Sprache? @relation(fields: [Ref_Sprache], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Translation_Sprache")
}

model Uebersetzer {
  ID          Int  @id(map: "PK_Uebersetzer") @default(autoincrement())
  Ref_Label   Int?
  Ref_Sprache Int?
  Ref_File    Int?
  Ref_Content Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Uebersetzer1 {
  ID          Int
  Ref_Label   Int?
  Ref_Sprache Int?
  Ref_File    Int?
  Ref_Content Int?

  @@ignore
}

model Unterklasse {
  ID          Int     @id(map: "PK_Unterklasse") @default(autoincrement())
  Unterklasse String? @db.VarChar(50)
  Ref_Klasse  Int?
  Ref_Norm    Int?
  ENW         ENW[]
  Klasse      Klasse? @relation(fields: [Ref_Klasse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Unterklasse_Klasse")
  Norm        Norm?   @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Unterklasse_Norm")
}

model Werkstatt {
  ID                                     Int                                      @id(map: "PK_Werkstatt") @default(autoincrement())
  Name_1                                 String?                                  @db.NVarChar(200)
  Name_2                                 String?                                  @db.NVarChar(200)
  Name_3                                 String?                                  @db.NVarChar(200)
  Ortsteil                               String?                                  @db.NVarChar(200)
  Strasse                                String?                                  @db.NVarChar(200)
  PLZ                                    String?                                  @db.NVarChar(20)
  Ort                                    String?                                  @db.NVarChar(200)
  Ref_LKZ                                String?                                  @db.VarChar(5)
  Lat                                    Decimal?                                 @db.Decimal(14, 10)
  Long                                   Decimal?                                 @db.Decimal(14, 10)
  Ref_Bundesland                         Int?
  Ref_Firma                              Int?
  aktiv                                  Boolean?
  Conn_ENW_Taetigkeitsbereiche_Werkstatt Conn_ENW_Taetigkeitsbereiche_Werkstatt[]
  Bundesland                             Bundesland?                              @relation(fields: [Ref_Bundesland], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Werkstatt_Bundesland")
  Firma                                  Firma?                                   @relation(fields: [Ref_Firma], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Werkstatt_Firma")
}

model Werkstoffgruppe {
  ID                                                        Int         @id(map: "PK_Werkstoffgruppe") @default(autoincrement())
  Hauptnummer                                               String?     @db.VarChar(50)
  Beschreibung                                              String?     @db.VarChar(255)
  Ref_Norm                                                  Int?
  Unternummer                                               String?     @db.VarChar(50)
  Kenndaten_Kenndaten_Ref_WerkstoffgruppeToWerkstoffgruppe  Kenndaten[] @relation("Kenndaten_Ref_WerkstoffgruppeToWerkstoffgruppe")
  Kenndaten_Kenndaten_Ref_Werkstoffgruppe2ToWerkstoffgruppe Kenndaten[] @relation("Kenndaten_Ref_Werkstoffgruppe2ToWerkstoffgruppe")
  Norm                                                      Norm?       @relation(fields: [Ref_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Werkstoffgruppe_Norm")
}

model Werkstoffgruppen_EN288 {
  ID           Int     @id(map: "PK_Werkstoffgruppen_EN288") @default(autoincrement())
  Gruppen_Nr   String? @map("Gruppen-Nr") @db.NVarChar(3)
  Beschreibung String? @db.NVarChar(255)
  Norm         String? @db.NVarChar(10)
}

model Werkstoffgruppen_ISOTR15608 {
  ID                        Int                         @id(map: "PK_Werkstoffgruppe_ISOTR15608") @default(autoincrement())
  Nummer                    String?                     @db.NVarChar(10)
  Hauptgruppe               Int?                        @db.TinyInt
  Untergruppe               Int?                        @db.TinyInt
  Kurzbeschreibung          String?                     @db.NVarChar(100)
  Beschreibung              String?                     @db.NVarChar(Max)
  Conn_Norm_Werkstoffgruppe Conn_Norm_Werkstoffgruppe[]
}

model ZWS_Conn_Zertifikat_Schutzgas {
  ID                 Int             @id(map: "PK_ZWS_Conn_Zertifikat_Schutzgas") @default(autoincrement())
  Ref_ZWS_Zertifikat Int?
  Ref_ZWS_Schutzgas  Int?
  row                Int?
  ZWS_Schutzgas      ZWS_Schutzgas?  @relation(fields: [Ref_ZWS_Schutzgas], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schutzgas_ZWS_Schutzgas")
  ZWS_Zertifikat     ZWS_Zertifikat? @relation(fields: [Ref_ZWS_Zertifikat], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schutzgas_ZWS_Zertifikat")
}

model ZWS_Conn_Zertifikat_Schweissposition {
  ID                       Int                   @id(map: "PK_ZWS_Conn_Zertifikat_Schweissposition") @default(autoincrement())
  Ref_ZWS_Zertifikat       Int?
  Ref_ZWS_Schweissposition Int?
  row                      Int?
  ZWS_Schweissposition     ZWS_Schweissposition? @relation(fields: [Ref_ZWS_Schweissposition], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schweissposition_ZWS_Schweissposition")
  ZWS_Zertifikat           ZWS_Zertifikat?       @relation(fields: [Ref_ZWS_Zertifikat], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schweissposition_ZWS_Zertifikat")
}

model ZWS_Conn_Zertifikat_Schweissprozess {
  ID                       Int                @id(map: "PK_Conn_ZWS_Zertifikat_Schweissprozess") @default(autoincrement())
  Ref_ZWS_Zertifikat       Int?
  Ref_ZWS_Schweissprozesse Int?
  row                      Int?               @default(1, map: "DF_Conn_ZWS_Zertifikat_Schweissprozess_row")
  Schweissverfahren        Schweissverfahren? @relation(fields: [Ref_ZWS_Schweissprozesse], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schweissprozess_Schweissverfahren")
  ZWS_Zertifikat           ZWS_Zertifikat?    @relation(fields: [Ref_ZWS_Zertifikat], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_Schweissprozess_ZWS_Zertifikat")
}

model ZWS_Conn_Zertifikat_WSG {
  ID                 Int             @id(map: "PK_ZWS_Conn_Zertifikat_WSG") @default(autoincrement())
  Ref_ZWS_Zertifikat Int?
  Ref_ZWS_WSG        Int?
  row                Int?
  ISO3834_WSG        ISO3834_WSG?    @relation(fields: [Ref_ZWS_WSG], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_WSG_ISO3834_WSG")
  ZWS_Zertifikat     ZWS_Zertifikat? @relation(fields: [Ref_ZWS_Zertifikat], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Conn_Zertifikat_WSG_ZWS_Zertifikat")
}

model ZWS_Hersteller {
  ID             Int              @id(map: "PK_ZWS_Hersteller") @default(autoincrement())
  Hersteller     String?          @db.NChar(200)
  Strasse        String?          @db.NChar(200)
  PLZ            String?          @db.NChar(10)
  Ort            String?          @db.NChar(200)
  Ref_LKZ        String?          @db.NVarChar(5)
  aktiv          Boolean?         @default(true, map: "DF_ZWS_Hersteller_aktiv")
  ZWS_Zertifikat ZWS_Zertifikat[]
}

model ZWS_Norm {
  ID             Int              @id(map: "PK_ZWS_Norm") @default(autoincrement())
  Norm           String?          @db.NVarChar(100)
  aktiv          Boolean?
  ZWS_Zertifikat ZWS_Zertifikat[]
}

model ZWS_Schutzgas {
  ID                            Int                             @id(map: "PK_ZWS_Schutzgas") @default(autoincrement())
  Schutzgas                     String?                         @db.NVarChar(10)
  ZWS_Conn_Zertifikat_Schutzgas ZWS_Conn_Zertifikat_Schutzgas[]
}

model ZWS_Schweissposition {
  ID                                   Int                                    @id(map: "PK_ZWS_Schweissposition") @default(autoincrement())
  Position                             String?                                @db.NVarChar(10)
  ZWS_Conn_Zertifikat_Schweissposition ZWS_Conn_Zertifikat_Schweissposition[]
}

model ZWS_Schweisszusatztyp {
  ID             Int              @id(map: "PK_ZWS_Schweisszusatztyp") @default(autoincrement())
  aktiv          Boolean?         @default(true, map: "DF_ZWS_Schweisszusatztyp_aktiv")
  Text_DE        String?          @db.NVarChar(100)
  Text_EN        String?          @db.NVarChar(100)
  Text_IT        String?          @db.NVarChar(100)
  Text_FR        String?          @db.NVarChar(100)
  Text_PL        String?          @db.NVarChar(100)
  Text_HU        String?          @db.NVarChar(200)
  ZWS_Zertifikat ZWS_Zertifikat[]
}

model ZWS_Zertifikat {
  ID                                   Int                                    @id(map: "PK_ZWS_Zertifikat") @default(autoincrement())
  Nummer                               String?                                @db.NVarChar(50)
  Ref_ZWS_Schweisszusatztyp            Int?
  Ref_ZWS_Norm                         Int?
  Ref_ZWS_Hersteller                   Int?
  Markenbezeichnung                    String?                                @db.NVarChar(100)
  Geltungsdauer                        DateTime?                              @db.Date
  aktiv                                Boolean?
  Durchmesser_min                      Float?
  Durchmesser_max                      Float?
  geaendert_am                         DateTime?                              @default(now(), map: "DF_ZWS_Zertifikat_geaendert_am") @db.DateTime
  geaendert_von                        String?                                @db.NVarChar(50)
  ZWS_Conn_Zertifikat_Schutzgas        ZWS_Conn_Zertifikat_Schutzgas[]
  ZWS_Conn_Zertifikat_Schweissposition ZWS_Conn_Zertifikat_Schweissposition[]
  ZWS_Conn_Zertifikat_Schweissprozess  ZWS_Conn_Zertifikat_Schweissprozess[]
  ZWS_Conn_Zertifikat_WSG              ZWS_Conn_Zertifikat_WSG[]
  ZWS_Hersteller                       ZWS_Hersteller?                        @relation(fields: [Ref_ZWS_Hersteller], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Zertifikat_ZWS_Hersteller")
  ZWS_Norm                             ZWS_Norm?                              @relation(fields: [Ref_ZWS_Norm], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Zertifikat_ZWS_Norm")
  ZWS_Schweisszusatztyp                ZWS_Schweisszusatztyp?                 @relation(fields: [Ref_ZWS_Schweisszusatztyp], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_ZWS_Zertifikat_ZWS_Schweisszusatztyp")
}
